{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"window.dnn.nodeModules.React\"","webpack:///./src/localization.js","webpack:///./src/constants/actionTypes/pagination.js","webpack:///./src/constants/actionTypes/visiblePanel.js","webpack:///./src/constants/actionTypes/webTab.js","webpack:///./src/constants/actionTypes/server.js","webpack:///./src/constants/actionTypes/applicationTab.js","webpack:///./src/constants/actionTypes/databaseTab.js","webpack:///./src/constants/actionTypes/smtpServerTab.js","webpack:///./src/constants/actionTypes/logsTab.js","webpack:///./src/constants/actionTypes/performanceTab.js","webpack:///./src/constants/actionTypes/index.js","webpack:///external \"window.dnn.nodeModules.CommonComponents\"","webpack:///./src/utils.js","webpack:///external \"window.dnn.nodeModules.Redux\"","webpack:///external \"window.dnn.nodeModules.ReactRedux\"","webpack:///./node_modules/prop-types/index.js","webpack:///./src/globals/application.js","webpack:///./node_modules/css-loader/lib/css-base.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./src/components/Tabs/tabs.less?b3b0","webpack:///external \"window.dnn.nodeModules.Es6Promise\"","webpack:///external \"window.dnn.nodeModules.ReactDOM\"","webpack:///external \"window.dnn.nodeModules.ReduxThunk\"","webpack:///./src/containers/Root.js","webpack:///external \"window.dnn.nodeModules.ReactCustomScrollBars\"","webpack:///./src/less/style.less?2c02","webpack:///./src/less/style.less","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./node_modules/prop-types/factoryWithThrowingShims.js","webpack:///./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack:///./src/components/Body/style.less?1ee5","webpack:///./src/components/Body/style.less","webpack:///./src/components/Tabs/tabs.less","webpack:///./src/components/common/style.less?8f6d","webpack:///./src/components/common/style.less","webpack:///./src/actions/pagination.js","webpack:///./src/services/serviceFramework.js","webpack:///./src/services/webTabService.js","webpack:///./src/actions/webTab.js","webpack:///./src/services/serverService.js","webpack:///./src/actions/server.js","webpack:///./src/services/applicationTabService.js","webpack:///./src/actions/applicationTab.js","webpack:///./src/services/databaseTabService.js","webpack:///./src/actions/databaseTab.js","webpack:///./src/services/logsTabService.js","webpack:///./src/actions/logsTab.js","webpack:///./src/components/common/InfoBlock.jsx","webpack:///./src/components/Tabs/Application.jsx","webpack:///./src/components/Tabs/Web.jsx","webpack:///./src/components/Tabs/Database/BackupGrid.jsx","webpack:///./src/components/Tabs/Database/FilesGrid.jsx","webpack:///./src/components/Tabs/Database/Database.jsx","webpack:///./src/components/common/GlobalIcon.jsx","webpack:///./src/components/common/RadioButtonBlock.jsx","webpack:///./src/components/common/EditBlock.jsx","webpack:///./src/components/common/SwitchBlock.jsx","webpack:///./src/services/smtpServerService.js","webpack:///./src/actions/smtpServerTab.js","webpack:///./src/components/Tabs/SmtpServer.jsx","webpack:///./src/components/common/DropdownBlock.jsx","webpack:///./src/components/common/WarningBlock.jsx","webpack:///./src/services/performanceTabService.js","webpack:///./src/actions/performanceTab.js","webpack:///./src/components/Tabs/Performance.jsx","webpack:///./src/components/Tabs/Logs.jsx","webpack:///./src/components/Body/Body.jsx","webpack:///./src/components/App.jsx","webpack:///./src/containers/Root.prod.js","webpack:///./src/validation/validationSmtpServerTab.js","webpack:///./src/reducers/rootReducer.js","webpack:///./src/reducers/paginationReducer.js","webpack:///./src/reducers/visiblePanelReducer.js","webpack:///./src/reducers/webTabReducer.js","webpack:///./src/reducers/serverReducer.js","webpack:///./src/reducers/applicationTabReducer.js","webpack:///./src/reducers/databaseTabReducer.js","webpack:///./src/reducers/smtpServerTabReducer.js","webpack:///./src/reducers/logsTabReducer.js","webpack:///./src/reducers/performanceTabReducer.js","webpack:///./src/main.jsx","webpack:///./src/store/configureStore.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","window","dnn","nodeModules","React","_utils__WEBPACK_IMPORTED_MODULE_0__","resx","util","getResx","paginationActionTypes","LOAD_MORE","LOAD_TAB_DATA","SELECT_PANEL","webTab","LOAD_WEB_TAB","LOADED_WEB_TAB","ERROR_LOADING_WEB_TAB","server","REQUEST_RESTART_APPLICATION","END_REQUEST_RESTART_APPLICATION","ERROR_REQUEST_RESTART_APPLICATION","REQUEST_CLEAR_CACHE","END_REQUEST_CLEAR_CACHE","ERROR_REQUEST_CLEAR_CACHE","applicationTab","LOAD_APPLICATION_TAB","LOADED_APPLICATION_TAB","ERROR_LOADING_APPLICATION_TAB","databaseTab","LOAD_DATABASE_TAB","LOADED_DATABASE_TAB","ERROR_LOADING_DATABASE_TAB","smtpServerTab","LOAD_SMTP_SERVER_TAB","LOADED_SMTP_SERVER_TAB","ERROR_LOADING_SMTP_SERVER_TAB","CHANGE_SMTP_SERVER_MODE","CHANGE_SMTP_AUTHENTICATION","CHANGE_SMTP_CONFIGURATION_VALUE","UPDATE_SMTP_SERVER_SETTINGS","UPDATED_SMTP_SERVER_SETTINGS","ERROR_UPDATING_SMTP_SERVER_SETTINGS","SEND_TEST_EMAIL","SENT_TEST_EMAIL","ERROR_SENDING_TEST_EMAIL","logsTab","LOAD_LOGS_TAB","LOADED_LOGS_TAB","ERROR_LOADING_LOGS_TAB","LOAD_LOG","LOADED_LOG","ERROR_LOADING_LOG","performanceTab","LOAD_PERFORMANCE_TAB","LOADED_PERFORMANCE_TAB","ERROR_LOADING_PERFORMANCE_TAB","CHANGE_PERFORMANCE_SETTINGS_VALUE","SAVE_PERFORMANCE_SETTINGS","SAVED_PERFORMANCE_SETTINGS","ERROR_SAVING_PERFORMANCE_SETTINGS","INCREMENT_VERSION","INCREMENTED_VERSION","ERROR_INCREMENTING_VERSION","__webpack_exports__","pagination","visiblePanel","actionTypes_webTab","actionTypes_server","actionTypes_applicationTab","actionTypes_databaseTab","actionTypes_smtpServerTab","actionTypes_logsTab","actionTypes_performanceTab","CommonComponents","utilities","config","initialized","settings","moduleName","utils","init","options","Error","formatDateNoTime","date","Date","toLocaleDateString","culture","year","month","day","formatNumeric","toLocaleString","formatNumeric2Decimals","parseFloat","Math","round","toFixed","notify","message","notifyError","isHostUser","isHost","confirm","confirmText","cancelText","confirmHandler","cancelHandler","getServiceFramework","sf","Redux","ReactRedux","serverTabsList","application","initCallback","getPanelIdFromPath","updatePanelTabView","panelViewData","path","require","dispatch","registerServerTab","serverTab","push","panelId","getRegisteredServerTabs","useSourceMap","list","toString","this","map","item","content","cssMapping","btoa","sourceMapping","sourceMap","unescape","encodeURIComponent","JSON","stringify","toComment","sourceURLs","sources","source","sourceRoot","concat","join","cssWithMappingToString","mediaQuery","alreadyImportedModules","length","id","stylesInDom","isOldIE","fn","memo","apply","arguments","memoize","document","all","atob","getElement","target","parent","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","e","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","domStyle","refs","j","parts","addStyle","listToStyles","newStyles","base","part","css","media","insertStyleElement","style","insertInto","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","before","removeStyleElement","parentNode","removeChild","idx","indexOf","splice","createStyleElement","createElement","undefined","attrs","type","nonce","nc","getNonce","addAttrs","el","keys","forEach","setAttribute","obj","update","remove","result","transform","default","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","blob","oldSrc","href","styleSheet","cssText","createTextNode","newObj","DEBUG","newList","mayRemove","replaceText","textStore","index","replacement","filter","Boolean","cssNode","childNodes","hmr","locals","Es6Promise","ReactDOM","ReduxThunk","ReactCustomScrollBars","location","baseUrl","protocol","host","currentDir","pathname","replace","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","test","ReactPropTypesSecret","emptyFunction","shim","props","propName","componentName","propFullName","secret","err","getShim","isRequired","ReactPropTypes","array","bool","func","number","string","symbol","any","arrayOf","element","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","paginationActions","loadTab","ActionTypes","payload","controllerName","moduleRoot","controller","serviceFramework","method","parameters","Promise","callback","errorCallback","serializeQueryStringParameters","post","webTabService","getWebServerInfo","webTabActions","loadWebServerInfo","then","response","webServerInfo","catch","errorMessage","localization","serverService","restartApplication","clearCache","serverActions","url","applicationTabService","getApplicationInfo","applicationTabActions","loadApplicationInfo","applicationInfo","databaseTabService","getDataBaseServerInfo","databaseTabActions","loadDatabaseServerInfo","databaseServerInfo","getLogs","logList","Results","LogList","log","label","upgradeLogList","UpgradeLogList","upgradeLog","getLog","fileName","logName","logsTabActions","loadLogsServerInfo","logsTabService","logs","loadSelectedLog","logResponse","InfoBlock","Component","external_window_dnn_nodeModules_React_default","a","external_window_dnn_nodeModules_CommonComponents_","className","tooltipMessage","tooltip","text","Application","isApplicationInfoLoaded","onRetrieveApplicationInfo","newProps","InfoBlock_InfoBlock","Localization","product","version","guid","htmlEditorProvider","dataProvider","cachingProvider","loggingProvider","friendlyUrlProvider","friendlyUrlsEnabled","friendlyUrlType","schedulerMode","webFarmEnabled","casPermissions","connect","state","_objectSpread","bindActionCreators","ApplicationTabActions","Web","onRetrieveWebServerInfo","osVersion","iisVersion","framework","identity","hostName","physicalPath","relativePath","serverTime","Web_objectSpread","WebTabActions","BackupGrid","backups","field","columnSize","maxWidth","startDate","finishDate","size","backupType","rows","getBackUpsGridRows","FilesGrid","files","fileType","getFilesGridRows","Database","onRetrieveDatabaseServerInfo","databaseInfo","productVersion","servicePack","productEdition","softwarePlatform","BackupGrid_BackupGrid","paddingBottom","FilesGrid_FilesGrid","Database_objectSpread","DatabaseTabActions","GlobalIcon","margin","isSwitch","messages","_extends","float","height","position","tooltipStyle","defaultProps","RadioButtonBlock","width","isGlobal","GlobalIcon_GlobalIcon","onChange","EditBlock","error","margin-top","globalTooltipStyle","labelHidden","onText","offText","readOnly","getControllerName","smtpServerService","getSmtpSettings","updateSmtpSettings","sendTestEmail","smtpServeTabActions","loadSmtpServerInfo","smtpServerInfo","changeSmtpServerMode","smtpServeMode","changeSmtpAuthentication","smtpAuthentication","changeSmtpConfigurationValue","updateSmtpServerSettings","success","infoMessage","confirmationMessage","errMessage","data","parse","responseText","SmtpServer","onRetrieveSmtpServerInfo","onChangeSmtpServerMode","authentication","onChangeSmtpAuthentication","enabled","onChangeSmtpConfigurationValue","event","areThereValidationError","smtpSettings","smtpServerMode","site","updateRequest","smtpServer","smtpConnectionLimit","smtpMaxIdleTime","smtpUsername","smtpUserName","smtpPassword","smtpHostEmail","enableSmtpSsl","messageSchedulerBatchSize","onUpdateSmtpServerSettings","errors","prop","sendEmailRequest","onSendTestEmail","portalName","areGlobalSettings","selectedSmtpSettings","credentialVisible","smtpSettingsVisible","RadioButtonBlock_RadioButtonBlock","getSmtpServerOptions","EditBlock_EditBlock","onChangeField","getSmtpAuthenticationOptions","onChangeAuthenticationMode","SwitchBlock_InfoBlock","onChangeSmtpEnableSsl","onClick","onTestSmtpSettings","onSave","SmtpServer_objectSpread","SmtpServerTabActions","DropdownBlock","onSelect","WarningBlock","dangerouslySetInnerHTML","__html","SvgIcons","ErrorStateIcon","convertKeyValueToLabelValue","Value","Key","performanceTabService","getPerformanceSettings","PortalName","CachingProvider","pageStatePersistence","PageStatePersistence","moduleCacheProvider","ModuleCacheProvider","pageCacheProvider","PageCacheProvider","cacheSetting","CacheSetting","authCacheability","AuthCacheability","unauthCacheability","UnauthCacheability","sslForCacheSynchronization","SslForCacheSynchronization","clientResourcesManagementMode","ClientResourcesManagementMode","currentHostVersion","CurrentHostVersion","hostEnableCompositeFiles","HostEnableCompositeFiles","hostMinifyCss","HostMinifyCss","hostMinifyJs","HostMinifyJs","currentPortalVersion","CurrentPortalVersion","portalEnableCompositeFiles","PortalEnableCompositeFiles","portalMinifyCss","PortalMinifyCss","portalMinifyJs","PortalMinifyJs","cachingProviderOptions","CachingProviderOptions","pageStatePersistenceOptions","PageStatePersistenceOptions","moduleCacheProviders","ModuleCacheProviders","pageCacheProviders","PageCacheProviders","cacheSettingOptions","CacheSettingOptions","authCacheabilityOptions","AuthCacheabilityOptions","unauthCacheabilityOptions","UnauthCacheabilityOptions","save","performanceSettings","request","incrementVersion","isGlobalSetting","performanceTabActions","loadPerformanceSettings","changePerformanceSettingsValue","isGlobalSettings","parseInt","Performance","onRetrievePerformanceSettings","onIncrementVersion","onChangePerformanceSettingsValue","isLoading","enableCompositeFiles","minifyCss","minifyJs","enableCompositeFilesKey","minifyCssKey","minifyJsKey","versionLocalizationKey","WarningBlock_WarningBlock","DropdownBlock_DropdownBlock","paddingLeft","marginBottom","disable","incrementingVersion","getClientResourcesManagementModeOptions","disabled","isSaving","loading","saving","Performance_objectSpread","PerformanceTabActions","Logs","onRetrieveLogsServerInfo","withBorder","selectedLog","prependWith","onSelectedLog","external_window_dnn_nodeModules_ReactCustomScrollBars_","renderTrackHorizontal","Logs_extends","logData","Logs_objectSpread","LogsTabActions","Body","_this","Body_classCallCheck","Body_possibleConstructorReturn","Body_getPrototypeOf","handleSelect","Body_assertThisInitialized","PaginationActions","elements","propertyNameHasIndex","propertyNameHasValue","getInteger","min","max","registeredTabs","tab","isHostOnlyVisible","systemInfoTabHeaders","systemInfoTabBody","Tabs_Application","Tabs_Web","Tabs_Database_Database","serverSettingsTabHeaders","serverSettingsTabBody","Tabs_SmtpServer","Tabs_Performance","Tabs_Logs","mainTabHeaders","mainTabBody","tabHeaders","insertElementsInArray","parentIndex","selectedIndex","tabIndex","restartAppButtonStyle","marginRight","App","reloadPage","reload","buttonVisible","isOpen","title","onClearCacheClicked","onRestartApplicationClicked","components_Body_Body","selectedPage","selectedPageVisibleIndex","App_objectSpread","ServerActions","Root","Root_prod_classCallCheck","Root_prod_possibleConstructorReturn","Root_prod_getPrototypeOf","components_App","regExpPositiveIntegerValue","validateFields","rootReducer","combineReducers","action","visiblePanelReducer_objectSpread","webTabReducer_objectSpread","serverReducer_objectSpread","applicationTabReducer_objectSpread","databaseTabReducer_objectSpread","smtpServerTabReducer_objectSpread","logsTabReducer_objectSpread","pageStatePersistenceMode","performanceTabReducer_objectSpread","store","initialState","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","configureStore","appContainer","getElementById","getAttribute","render","external_window_dnn_nodeModules_ReactRedux_","Root_default"],"mappings":"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","file":"servers-bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 28);\n","module.exports = window.dnn.nodeModules.React;","import util from \"./utils\";\n\nconst resx = {\n    get(key) {\n        return util.getResx(key);\n    }\n};\n\nexport default resx;","const paginationActionTypes =  {    \n    LOAD_MORE: \"LOAD_MORE\",\n    LOAD_TAB_DATA: \"LOAD_TAB_DATA\"\n};\nexport default paginationActionTypes;\n","const paginationActionTypes =  {    \n    SELECT_PANEL: \"SELECT_PANEL\"\n};\nexport default paginationActionTypes;\n","const webTab =  {\n    LOAD_WEB_TAB: \"LOAD_WEB_TAB\",\n    LOADED_WEB_TAB: \"LOADED_WEB_TAB\",\n    ERROR_LOADING_WEB_TAB: \"ERROR_LOADING_WEB_TAB\"\n};\n\nexport default webTab;","const server =  {\n    REQUEST_RESTART_APPLICATION: \"REQUEST_RESTART_APPLICATION\",\n    END_REQUEST_RESTART_APPLICATION: \"END_REQUEST_RESTART_APPLICATION\",\n    ERROR_REQUEST_RESTART_APPLICATION: \"ERROR_REQUEST_RESTART_APPLICATION\",\n    REQUEST_CLEAR_CACHE: \"REQUEST_CLEAR_CACHE\",\n    END_REQUEST_CLEAR_CACHE: \"END_REQUEST_CLEAR_CACHE\",\n    ERROR_REQUEST_CLEAR_CACHE: \"ERROR_REQUEST_CLEAR_CACHE\"  \n};\n\nexport default server;","const applicationTab =  {\n    LOAD_APPLICATION_TAB: \"LOAD_APPLICATION_TAB\",\n    LOADED_APPLICATION_TAB: \"LOADED_APPLICATION_TAB\",\n    ERROR_LOADING_APPLICATION_TAB: \"ERROR_LOADING_APPLICATION_TAB\"\n};\n\nexport default applicationTab;","const databaseTab =  {\n    LOAD_DATABASE_TAB: \"LOAD_DATABASE_TAB\",\n    LOADED_DATABASE_TAB: \"LOADED_DATABASE_TAB\",\n    ERROR_LOADING_DATABASE_TAB: \"ERROR_LOADING_DATABASE_TAB\"\n};\n\nexport default databaseTab;","const smtpServerTab =  {\n    LOAD_SMTP_SERVER_TAB: \"LOAD_SMTP_SERVER_TAB\",\n    LOADED_SMTP_SERVER_TAB: \"LOADED_SMTP_SERVER_TAB\",\n    ERROR_LOADING_SMTP_SERVER_TAB: \"ERROR_LOADING_SMTP_SERVER_TAB\",\n    CHANGE_SMTP_SERVER_MODE: \"CHANGE_SMTP_SERVER_MODE\",\n    CHANGE_SMTP_AUTHENTICATION: \"CHANGE_SMTP_AUTHENTICATION\",\n    CHANGE_SMTP_CONFIGURATION_VALUE: \"CHANGE_SMTP_CONFIGURATION_VALUE\",\n    UPDATE_SMTP_SERVER_SETTINGS: \"UPDATE_SMTP_SERVER_SETTINGS\",\n    UPDATED_SMTP_SERVER_SETTINGS: \"UPDATED_SMTP_SERVER_SETTINGS\",\n    ERROR_UPDATING_SMTP_SERVER_SETTINGS: \"ERROR_UPDATING_SMTP_SERVER_SETTINGS\",\n    SEND_TEST_EMAIL: \"SEND_TEST_EMAIL\",\n    SENT_TEST_EMAIL: \"SENT_TEST_EMAIL\",\n    ERROR_SENDING_TEST_EMAIL: \"ERROR_SENDING_TEST_EMAIL\"\n};\n\nexport default smtpServerTab;","const logsTab =  {\n    LOAD_LOGS_TAB: \"LOAD_LOGS_TAB\",\n    LOADED_LOGS_TAB: \"LOADED_LOGS_TAB\",\n    ERROR_LOADING_LOGS_TAB: \"ERROR_LOADING_LOGS_TAB\",\n    LOAD_LOG: \"LOAD_LOG\",\n    LOADED_LOG: \"LOADED_LOG\",\n    ERROR_LOADING_LOG: \"ERROR_LOADING_LOG\"\n};\n\nexport default logsTab;","const performanceTab =  {\n    LOAD_PERFORMANCE_TAB: \"LOAD_PERFORMANCE_TAB\",\n    LOADED_PERFORMANCE_TAB: \"LOADED_PERFORMANCE_TAB\",\n    ERROR_LOADING_PERFORMANCE_TAB: \"ERROR_LOADING_PERFORMANCE_TAB\",\n    CHANGE_PERFORMANCE_SETTINGS_VALUE: \"CHANGE_PERFORMANCE_SETTINGS_VALUE\",\n    SAVE_PERFORMANCE_SETTINGS: \"SAVE_PERFORMANCE_SETTINGS\",\n    SAVED_PERFORMANCE_SETTINGS: \"SAVED_PERFORMANCE_SETTINGS\",\n    ERROR_SAVING_PERFORMANCE_SETTINGS: \"ERROR_SAVING_PERFORMANCE_SETTINGS\",\n    INCREMENT_VERSION: \"INCREMENT_VERSION\",\n    INCREMENTED_VERSION: \"INCREMENTED_VERSION\",\n    ERROR_INCREMENTING_VERSION: \"ERROR_INCREMENTING_VERSION\"\n};\n\nexport default performanceTab;","import pagination from \"./pagination\";\nimport visiblePanel from \"./visiblePanel\";\nimport webTab from \"./webTab\";\nimport server from \"./server\";\nimport applicationTab from \"./applicationTab\";\nimport databaseTab from \"./databaseTab\";\nimport smtpServerTab from \"./smtpServerTab\";\nimport logsTab from \"./logsTab\";\nimport performanceTab from \"./performanceTab\";\n\nexport {\n    pagination,\n    visiblePanel,\n    webTab,\n    server,\n    applicationTab,\n    databaseTab,\n    smtpServerTab,\n    logsTab,\n    performanceTab\n};","module.exports = window.dnn.nodeModules.CommonComponents;","let utilities = null;\nlet config = null;\nlet initialized = false;\nlet settings = null;\nlet moduleName = null;\n\nfunction init(options) {\n    if (!options) {\n        throw new Error(\"This method needs to have an options object as an input parameter\");\n    }\n    if (!options.utilities) {\n        throw new Error(\"This method needs to have an options.utilities object as an input parameter\");\n    }\n    if (!options.config) {\n        throw new Error(\"This method needs to have an options.config object as an input parameter\");\n    }\n    utilities = options.utilities;  \n    config = options.config;\n    moduleName = options.moduleName;\n    settings = options.settings; \n    initialized = true;\n}\n\nfunction formatDateNoTime(date) {\n    if (!initialized) {\n        throw new Error(\"Utils have not been initialized\");\n    }\n    const dateOptions = { year: \"numeric\", month: \"numeric\", day: \"numeric\" };\n    return new Date(date).toLocaleDateString(config.culture, dateOptions);\n}\n\nfunction formatNumeric(value) {\n    if (!initialized) {\n        throw new Error(\"Utils have not been initialized\");\n    }\n    return value.toLocaleString(config.culture);\n}\n\nfunction formatNumeric2Decimals(value) {\n    return parseFloat(Math.round(value * 100) / 100).toFixed(2);\n}\n\nfunction notify(message) {\n    if (!initialized) {\n        throw new Error(\"Utils have not been initialized\");\n    }\n    return utilities.notify(message);\n}\n\nfunction notifyError(message) {\n    if (!initialized) {\n        throw new Error(\"Utils have not been initialized\");\n    }\n    return utilities.notifyError(message);\n}\n\nfunction confirm(message, confirmText, cancelText, confirmHandler, cancelHandler) {\n    if (!initialized) {\n        throw new Error(\"Utils have not been initialized\");\n    }\n    return utilities.confirm(message, confirmText, cancelText, confirmHandler, cancelHandler);\n}\n\nfunction getResx(key) {\n    if (!initialized) {\n        throw new Error(\"Utils have not been initialized\");\n    }\n    return utilities.getResx(moduleName, key);\n}\n\nfunction isHostUser() {\n    if (!initialized) {\n        throw new Error(\"Utils have not been initialized\");\n    }\n    return settings.isHost;\n}\n\nfunction getServiceFramework() {\n    if (!initialized) {\n        throw new Error(\"Utils have not been initialized\");\n    }\n    return utilities.sf;\n}\n\nconst utils = {\n    init,\n    formatDateNoTime,\n    formatNumeric,\n    formatNumeric2Decimals,\n    notify,\n    notifyError,\n    getResx,\n    isHostUser,\n    confirm,\n    getServiceFramework\n};\n\nexport default utils;\n","module.exports = window.dnn.nodeModules.Redux;","module.exports = window.dnn.nodeModules.ReactRedux;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","import utilities from \"../utils\";\nconst serverTabsList = [];\n\nfunction init(initCallback) {\n    // This setting is required and define the public path \n    // to allow the web application to download assets on demand \n    // eslint-disable-next-line no-undef\n    // __webpack_public_path__ = options.publicPath;        \n    let options = window.dnn[initCallback]();\n\n    utilities.init(options);\n    utilities.getPanelIdFromPath = options.utilities.getPanelIdFromPath;\n    utilities.updatePanelTabView = options.utilities.updatePanelTabView;\n    utilities.panelViewData = options.utilities.panelViewData;\n    utilities.path = options.path;\n\n    // delay the styles loading after the __webpack_public_path__ is set\n    // this allows the fonts associated to be loaded properly in production\n    require(\"../less/style.less\");\n}\n\nfunction dispatch() {\n    throw new Error(\"dispatch method needs to be overwritten from the Redux store\");\n}\n\nfunction registerServerTab(serverTab) {\n    serverTabsList.push(serverTab);\n\n    let panelId = utilities.getPanelIdFromPath(utilities.path);\n    utilities.updatePanelTabView(panelId);\n}\n\nfunction getRegisteredServerTabs() {\n    return serverTabsList;\n}\n\nconst application = {\n    init,\n    dispatch,\n    registerServerTab,\n    getRegisteredServerTabs\n};\n\n\nexport default application;","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (typeof __webpack_nonce__ === 'undefined') {\n\t\treturn null;\n\t}\n\n\treturn __webpack_nonce__;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","\nvar content = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./tabs.less\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./tabs.less\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./tabs.less\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","module.exports = window.dnn.nodeModules.Es6Promise;","module.exports = window.dnn.nodeModules.ReactDOM;","module.exports = window.dnn.nodeModules.ReduxThunk;","if (process.env.NODE_ENV === \"production\") {\n    module.exports = require(\"./Root.prod\");\n} else {\n    module.exports = require(\"./Root.dev\");\n}\n","module.exports = window.dnn.nodeModules.ReactCustomScrollBars;","\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/less-loader/dist/cjs.js!./style.less\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!../../node_modules/less-loader/dist/cjs.js!./style.less\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/less-loader/dist/cjs.js!./style.less\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","\nvar content = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./style.less\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./style.less\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./style.less\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#servers-container .img-responsive{max-width:100%;height:auto}\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"svg{fill:#C8C8C8}svg:hover{fill:#6F7273}svg:active{fill:#1E88C3}.dnn-servers-tab-panel .dnn-servers-info-panel{padding:30px 80px 45px;display:inline-block}.dnn-servers-tab-panel .dnn-servers-info-panel-big{margin:30px 30px 45px;display:inline-block;width:93%}.dnn-servers-tab-panel .dnn-servers-info-panel-big .dnn-switch-container{float:right}.dnn-servers-tab-panel .dnn-ui-common-input-group{padding:0 0 32px 0}.dnn-servers-tab-panel .dnn-ui-common-input-group .title label{font-weight:bolder;float:left;text-transform:uppercase}.dnn-servers-tab-panel .dnn-ui-common-input-group .dnn-single-line-input-with-error{display:block}.dnn-servers-tab-panel .tooltipAdjustment{float:left;width:100%}.dnn-servers-tab-panel .tooltipAdjustment div.tooltip-text{max-width:320px;word-break:normal}.dnn-servers-tab-panel .log-file-cell{padding:7px 0}.dnn-servers-tab-panel .log-file-cell .dnn-dropdown{border-right:1px solid #C8C8C8}.dnn-servers-tab-panel .log-file-cell .dnn-dropdown .collapsible-label{padding:3px 0}.dnn-servers-tab-panel .log-file-cell .dnn-dropdown .dropdown-icon{top:5px;right:17px}.dnn-servers-tab-panel .leftPane{padding-right:30px;border-right:1px solid #C8C8C8}.dnn-servers-tab-panel .leftPane .dnn-radio-buttons ul li{margin:0 15px 0 0}.dnn-servers-tab-panel .leftPane .dnn-radio-buttons ul li label{word-break:break-word}.dnn-servers-tab-panel .rightPane{padding-left:20px;padding-right:10px}.dnn-servers-tab-panel .rightPane .dnn-radio-buttons ul li:first-child{margin-left:0}.dnn-servers-tab-panel .border-bottom{border-bottom:1px solid #C8C8C8;margin-bottom:28px}.dnn-servers-tab-panel .dnn-radio-buttons ul li{padding-top:10px}.dnn-servers-tab-panel .dnn-radio-buttons ul li div.check{margin-top:8px}.dnn-servers-tab-panel .dnn-radio-buttons ul li label{padding:0px 21px 0 28px;margin-bottom:0px}.dnn-servers-tab-panel .buttons-panel{text-align:center;margin-top:55px}.dnn-servers-tab-panel .buttons-panel .dnn-ui-common-button{margin-right:10px}.dnn-servers-tab-panel .dnn-servers-grid-panel{padding:0 30px 55px;width:100%}.dnn-servers-tab-panel .dnn-servers-grid-panel .header-title label{font-weight:bolder;text-transform:uppercase;margin-bottom:10px}.dnn-servers-tab-panel .dnn-servers-grid-panel .grid{display:block;float:left;width:100%;margin-top:10px;border-left:1px solid #C8C8C8;border-right:1px solid #C8C8C8;box-sizing:border-box}.dnn-servers-tab-panel .dnn-servers-grid-panel .grid .row{display:table;width:100%;position:relative;padding:15px 20px;box-sizing:border-box;border-bottom:1px solid #C8C8C8}.dnn-servers-tab-panel .dnn-servers-grid-panel .grid .row .alert-message{text-align:center;color:red;font-weight:bolder}.dnn-servers-tab-panel .dnn-servers-grid-panel .grid .header{border-top:1px solid #C8C8C8;text-transform:uppercase}.dnn-servers-tab-panel .dnn-servers-grid-panel .grid .header .dnn-grid-cell{font-weight:bolder}.dnn-servers-tab-panel .dnn-servers-info-panel-big.logsTab .log-file-display{height:500px;padding-right:50px}.dnn-servers-tab-panel .dnn-servers-info-panel-big.logsTab .track-horizontal{display:none}.dnn-servers-tab-panel .dnn-servers-info-panel-big.logsTab .dnn-label{width:auto;margin-top:8px}.dnn-servers-tab-panel .dnn-servers-info-panel-big.logsTab .leftPane{margin-bottom:15px}.dnn-servers-tab-panel .dnn-servers-info-panel-big.logsTab .dnn-ui-common-input-group{padding:0px}.dnn-servers-tab-panel .dnn-servers-info-panel-big.logsTab .dnn-ui-common-multi-line-input{height:400px;overflow-y:hidden}.dnn-servers-tab-panel .dnn-servers-info-panel-big.logsTab .dnn-dropdown{width:70%}.dnn-servers-tab-panel .dnn-servers-info-panel-big.logsTab .dnn-ui-common-input-group .title label{text-transform:none}.dnn-servers-tab-panel .dnn-servers-info-panel-big.performanceSettingTab .title.lowerCase label{text-transform:none}.dnn-servers-tab-panel .dnn-servers-info-panel-big.performanceSettingTab .dnn-servers-grid-panel.newSection{padding-top:20px;padding-bottom:10px}.dnn-servers-tab-panel .dnn-servers-info-panel-big.performanceSettingTab .borderSeparation>div{border-bottom:1px solid #C8C8C8;margin-top:10px;padding-bottom:10px}.dnn-servers-tab-panel .dnn-servers-info-panel-big.performanceSettingTab .borderSeparation :first-child{margin-top:0}.dnn-servers-tab-panel .dnn-servers-info-panel-big.performanceSettingTab .dnn-ui-common-input-group .title label{text-transform:none}.dnn-servers-tab-panel .dnn-servers-info-panel-big.performanceSettingTab .currentHostVersion .dnn-label{width:auto}.dnn-servers-tab-panel .dnn-servers-info-panel-big.performanceSettingTab .currentHostVersion .dnn-label label{text-transform:uppercase}.dnn-servers-tab-panel .dnn-servers-info-panel-big.smtpServerSettingsTab .dnn-ui-common-input-group{padding-bottom:0}.dnn-servers-tab-panel .dnn-servers-info-panel-big.smtpServerSettingsTab .dnn-ui-common-input-group .dnn-radio-buttons{margin-bottom:28px}.dnn-servers-tab-panel .dnn-servers-info-panel-big.smtpServerSettingsTab .dnn-ui-common-input-group .title label{text-transform:none}\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./style.less\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./style.less\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/less-loader/dist/cjs.js!./style.less\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".dnn-servers-info-panel-big .serversTabWarningInfo{color:red;margin-bottom:32px}.dnn-servers-info-panel-big .serversTabWarningInfo .title label{text-transform:none}.dnn-servers-info-panel-big .serversTabWarningInfo .dnn-label{width:95%;padding:5px;padding-bottom:20px;color:red;font-weight:bold}.dnn-servers-info-panel-big .serversTabWarningInfo div{float:left}.dnn-servers-info-panel-big .serversTabWarningInfo div svg{width:20px;height:20px;fill:red;margin-top:4px}.dnn-servers-info-panel-big .serversTabWarningInfo div svg :hover{fill:red}\", \"\"]);\n\n// exports\n","import {pagination as ActionTypes}  from \"../constants/actionTypes\";\nconst paginationActions = {\n    loadTab(index) {\n        return (dispatch) => {\n            dispatch({\n                type: ActionTypes.LOAD_TAB_DATA,\n                payload: {\n                    index\n                }\n            });\n        };\n    }\n};\n\nexport default paginationActions;\n","import utils from \"../utils\";\nimport Promise from \"es6-promise\";\n\nfunction serializeQueryStringParameters(obj) {\n    const s = [];\n    for (let p in obj) {\n        if (obj.hasOwnProperty(p)) {\n            s.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\n        }\n    }\n    return s.join(\"&\");\n}\n\nfunction getServiceFramework(controllerName) {\n    const sf = utils.getServiceFramework();\n\n    sf.moduleRoot = \"PersonaBar\";\n    sf.controller = controllerName;\n\n    return sf;\n}\n\nconst serviceFramework = {\n    get(controllerName, method, parameters) {\n        const sf = getServiceFramework(controllerName);\n        return new Promise((callback, errorCallback) => {\n            sf.get(method + \"?\" + serializeQueryStringParameters(parameters), {}, callback, errorCallback);\n        });\n    },\n    post(controllerName, method, parameters) {\n        const sf = getServiceFramework(controllerName);\n        return new Promise((callback, errorCallback) => {\n            sf.post(method, parameters, callback, errorCallback);\n        });\n    }\n};\n\nexport default serviceFramework; ","import serviceFramework from \"./serviceFramework\";\n\nconst getWebServerInfo = function () {\n    return serviceFramework.get(\"SystemInfoWeb\", \"GetWebServerInfo\");\n};\n\nconst webTabService = {\n    getWebServerInfo: getWebServerInfo\n};\n\nexport default webTabService; ","import {webTab as ActionTypes}  from \"../constants/actionTypes\";\nimport webTabService from \"../services/webTabService\";\nimport localization from \"../localization\";\n\nconst webTabActions = {\n    loadWebServerInfo() {       \n        return (dispatch) => {\n            dispatch({\n                type: ActionTypes.LOAD_WEB_TAB               \n            });        \n            \n            webTabService.getWebServerInfo().then(response => {\n                dispatch({\n                    type: ActionTypes.LOADED_WEB_TAB,\n                    payload: {\n                        webServerInfo: response\n                    }\n                });  \n            }).catch(() => {\n                dispatch({\n                    type: ActionTypes.ERROR_LOADING_WEB_TAB,\n                    payload: {\n                        errorMessage: localization.get(\"errorMessageLoadingWebTab\")\n                    }\n                });\n            });        \n        };\n    }\n};\n\nexport default webTabActions;","import serviceFramework from \"./serviceFramework\";\n\nconst restartApplication = function () {\n    return serviceFramework.post(\"Server\", \"RestartApplication\");\n};\nconst clearCache = function () {\n    return serviceFramework.post(\"Server\", \"ClearCache\");\n};\n\nconst serverService = {\n    restartApplication,\n    clearCache    \n};\n\nexport default serverService; ","import {server as ActionTypes}  from \"../constants/actionTypes\";\nimport serverService from \"../services/serverService\";\nimport localization from \"../localization\";\n\nconst serverActions = {\n    restartApplication() {       \n        return (dispatch) => {\n            dispatch({\n                type: ActionTypes.REQUEST_RESTART_APPLICATION               \n            });        \n            \n            serverService.restartApplication().then(response => {\n                dispatch({\n                    type: ActionTypes.END_REQUEST_RESTART_APPLICATION,\n                    payload: {\n                        url: response.url\n                    }\n                });  \n            }).catch(() => {\n                dispatch({\n                    type: ActionTypes.ERROR_REQUEST_RESTART_APPLICATION,\n                    payload: {\n                        errorMessage: localization.get(\"errorMessageRestartingApplication\")\n                    }\n                });\n            });        \n        };\n    },\n    clearCache() {       \n        return (dispatch) => {\n            dispatch({\n                type: ActionTypes.REQUEST_CLEAR_CACHE               \n            });        \n            \n            serverService.clearCache().then(response => {\n                dispatch({\n                    type: ActionTypes.END_REQUEST_CLEAR_CACHE,\n                    payload: {\n                        url: response.url\n                    }\n                });  \n            }).catch(() => {\n                dispatch({\n                    type: ActionTypes.ERROR_REQUEST_CLEAR_CACHE,\n                    payload: {\n                        errorMessage: localization.get(\"errorMessageClearingCache\")\n                    }\n                });\n            });        \n        };\n    }\n};\n\nexport default serverActions;","import serviceFramework from \"./serviceFramework\";\nimport utils from \"../utils\";\n\nfunction getControllerName() {\n    return utils.isHostUser() ? \"SystemInfoApplicationHost\" : \"SystemInfoApplicationAdmin\";\n}\n\nconst getApplicationInfo = function () {\n    return serviceFramework.get(getControllerName(), \"GetApplicationInfo\");\n};\n\nconst applicationTabService = {\n    getApplicationInfo: getApplicationInfo\n};\n\nexport default applicationTabService; ","import {applicationTab as ActionTypes}  from \"../constants/actionTypes\";\nimport applicationTabService from \"../services/applicationTabService\";\nimport localization from \"../localization\";\n\nconst applicationTabActions = {\n    loadApplicationInfo() {       \n        return (dispatch) => {\n            dispatch({\n                type: ActionTypes.LOAD_APPLICATION_TAB               \n            });        \n            \n            applicationTabService.getApplicationInfo().then(response => {\n                dispatch({\n                    type: ActionTypes.LOADED_APPLICATION_TAB,\n                    payload: {\n                        applicationInfo: response\n                    }\n                });  \n            }).catch(() => {\n                dispatch({\n                    type: ActionTypes.ERROR_LOADING_APPLICATION_TAB,\n                    payload: {\n                        errorMessage: localization.get(\"errorMessageLoadingApplicationTab\")\n                    }\n                });\n            });        \n        };\n    }\n};\n\nexport default applicationTabActions;","import serviceFramework from \"./serviceFramework\";\n\nconst getDataBaseServerInfo = function () {\n    return serviceFramework.get(\"SystemInfoDatabase\", \"GetDatabaseServerInfo\");\n};\n\nconst databaseTabService = {\n    getDataBaseServerInfo: getDataBaseServerInfo\n};\n\nexport default databaseTabService; ","import {databaseTab as ActionTypes}  from \"../constants/actionTypes\";\nimport databaseTabService from \"../services/databaseTabService\";\nimport localization from \"../localization\";\n\nconst databaseTabActions = {\n    loadDatabaseServerInfo() {       \n        return (dispatch) => {\n            dispatch({\n                type: ActionTypes.LOAD_DATABASE_TAB               \n            });        \n            \n            databaseTabService.getDataBaseServerInfo().then(response => {\n                dispatch({\n                    type: ActionTypes.LOADED_DATABASE_TAB,\n                    payload: {\n                        databaseServerInfo: response\n                    }\n                });  \n            }).catch(() => {\n                dispatch({\n                    type: ActionTypes.ERROR_LOADING_DATABASE_TAB,\n                    payload: {\n                        errorMessage: localization.get(\"errorMessageLoadingDatabaseTab\")\n                    }\n                });\n            });        \n        };\n    }\n};\n\nexport default databaseTabActions;","import serviceFramework from \"./serviceFramework\";\n\nconst getLogs = function () {\n    return serviceFramework.get(\"ServerSettingsLogs\", \"GetLogs\")\n        .then(response => {\n            const logList = response.Results.LogList.map((log) => {\n                return {\n                    value: log,\n                    label: log\n                };\n            });\n            \n            const upgradeLogList = response.Results.UpgradeLogList.map((log) => {\n                return {\n                    value: log,\n                    label: log,\n                    upgradeLog: true\n                };\n            });\n            \n            return logList.concat(upgradeLogList);\n        });\n};\n\nconst getLog = function (fileName, upgradeLog) {\n    if (upgradeLog) {\n        return serviceFramework.get(\"ServerSettingsLogs\", \"GetUpgradeLogFile\", {logName: fileName});    \n    }\n    \n    return serviceFramework.get(\"ServerSettingsLogs\", \"GetLogFile\", {fileName: fileName});\n};\n\nconst databaseTabService = {\n    getLogs: getLogs,\n    getLog: getLog\n};\n\nexport default databaseTabService; ","import {logsTab as ActionTypes}  from \"../constants/actionTypes\";\nimport logsTabService from \"../services/logsTabService\";\nimport localization from \"../localization\";\n\nconst logsTabActions = {\n    loadLogsServerInfo() {       \n        return (dispatch) => {\n            dispatch({\n                type: ActionTypes.LOAD_LOGS_TAB               \n            });        \n            \n            logsTabService.getLogs().then(logs => {\n                dispatch({\n                    type: ActionTypes.LOADED_LOGS_TAB,\n                    payload: {\n                        logs: logs\n                    }\n                });  \n            }).catch(() => {\n                dispatch({\n                    type: ActionTypes.ERROR_LOADING_LOGS_TAB,\n                    payload: {\n                        errorMessage: localization.get(\"errorMessageLoadingLogsTab\")\n                    }\n                });\n            });        \n        };\n    },\n       \n    loadSelectedLog(log) {\n        return (dispatch) => {\n            if (!log) {\n                return;\n            }\n            \n            const logName = log.value;\n            const upgradeLog = log.upgradeLog;\n            dispatch({\n                type: ActionTypes.LOAD_LOG,\n                payload: {\n                    log: logName\n                }               \n            });        \n            \n            logsTabService.getLog(logName, upgradeLog).then(response => {\n                let logResponse = \"\";\n                if (response && typeof response === \"string\") {\n                    logResponse = response;\n                }\n                \n                dispatch({\n                    type: ActionTypes.LOADED_LOG,\n                    payload: {\n                        log: logResponse\n                    }\n                });  \n            }).catch(() => {\n                dispatch({\n                    type: ActionTypes.ERROR_LOADING_LOG,\n                    payload: {\n                        errorMessage: localization.get(\"errorMessageLoadingLog\")\n                    }\n                });\n            });        \n        };\n    }\n};\n\nexport default logsTabActions;","import React, {Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Label, InputGroup } from \"@dnnsoftware/dnn-react-common\";\n\nexport default class InfoBlock extends Component {\n    \n    render() {\n        const {props} = this;\n\n        return <InputGroup>\n            <Label className=\"title\"\n                tooltipMessage={props.tooltip}\n                label={props.label} />\n            <Label label={props.text} />\n        </InputGroup>;\n    }\n}\n\nInfoBlock.propTypes = {\n    label: PropTypes.string,\n    tooltip: PropTypes.string,\n    text: PropTypes.string\n};","import React, {Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { GridSystem } from \"@dnnsoftware/dnn-react-common\";\nimport InfoBlock from \"../common/InfoBlock\";\nimport Localization from \"../../localization\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport ApplicationTabActions from \"../../actions/applicationTab\";\nimport utils from \"../../utils\";\n\nimport \"./tabs.less\";\n\nconst defaultPlaceHolder = \"...\";\n\nclass Application extends Component {\n\n    componentDidMount() {\n        if (!this.props.isApplicationInfoLoaded) {\n            this.props.onRetrieveApplicationInfo();\n        }        \n    }\n\n    UNSAFE_componentWillReceiveProps(newProps) {\n        if (this.props.errorMessage !== newProps.errorMessage && newProps.errorMessage) {\n            utils.notifyError(newProps.errorMessage);\n        }\n    }\n\n    render() {\n        const {props} = this;\n        return <div className=\"dnn-servers-info-panel\">\n            <GridSystem>\n                <div>\n                    <InfoBlock label={Localization.get(\"plProduct\")} \n                        tooltip={Localization.get(\"plProduct.Help\")} \n                        text={props.applicationInfo.product || defaultPlaceHolder} />   \n\n                    <InfoBlock label={Localization.get(\"plVersion\")} \n                        tooltip={Localization.get(\"plVersion.Help\")} \n                        text={props.applicationInfo.version || defaultPlaceHolder} /> \n\n                    {utils.isHostUser() && \n                        <div className=\"tooltipAdjustment\">\n                            <InfoBlock label={Localization.get(\"plGUID\")} \n                                tooltip={Localization.get(\"plGUID.Help\")} \n                                text={props.applicationInfo.guid || defaultPlaceHolder} /> \n                        </div>\n                    }\n                    \n                    <InfoBlock label={Localization.get(\"HostInfo_HtmlEditorProvider\")} \n                        tooltip={Localization.get(\"HostInfo_HtmlEditorProvider.Help\")} \n                        text={props.applicationInfo.htmlEditorProvider || defaultPlaceHolder} />\n\n                    <InfoBlock label={Localization.get(\"plDataProvider\")} \n                        tooltip={Localization.get(\"plDataProvider.Help\")} \n                        text={props.applicationInfo.dataProvider || defaultPlaceHolder} /> \n\n                    <InfoBlock label={Localization.get(\"HostInfo_CachingProvider\")} \n                        tooltip={Localization.get(\"HostInfo_CachingProvider.Help\")} \n                        text={props.applicationInfo.cachingProvider || defaultPlaceHolder} /> \n\n                    <InfoBlock label={Localization.get(\"HostInfo_LoggingProvider\")} \n                        tooltip={Localization.get(\"HostInfo_LoggingProvider.Help\")} \n                        text={props.applicationInfo.loggingProvider || defaultPlaceHolder} /> \n                </div>\n                <div>\n                    <InfoBlock label={Localization.get(\"HostInfo_FriendlyUrlProvider\")} \n                        tooltip={Localization.get(\"HostInfo_FriendlyUrlProvider.Help\")} \n                        text={props.applicationInfo.friendlyUrlProvider || defaultPlaceHolder} /> \n\n                    <InfoBlock label={Localization.get(\"HostInfo_FriendlyUrlEnabled\")} \n                        tooltip={Localization.get(\"HostInfo_FriendlyUrlEnabled.Help\")} \n                        text={props.applicationInfo.friendlyUrlsEnabled || defaultPlaceHolder} /> \n\n                    <InfoBlock label={Localization.get(\"HostInfo_FriendlyUrlType\")} \n                        tooltip={Localization.get(\"HostInfo_FriendlyUrlType.Help\")} \n                        text={props.applicationInfo.friendlyUrlType || defaultPlaceHolder} /> \n\n                    <div className=\"tooltipAdjustment\">\n                        <InfoBlock label={Localization.get(\"HostInfo_SchedulerMode\")} \n                            tooltip={Localization.get(\"HostInfo_SchedulerMode.Help\")} \n                            text={props.applicationInfo.schedulerMode || defaultPlaceHolder} />\n                    </div>\n\n                    <InfoBlock label={Localization.get(\"HostInfo_WebFarmEnabled\")} \n                        tooltip={Localization.get(\"HostInfo_WebFarmEnabled.Help\")} \n                        text={props.applicationInfo.webFarmEnabled || defaultPlaceHolder} />\n\n                    <InfoBlock label={Localization.get(\"HostInfo_Permissions\")} \n                        tooltip={Localization.get(\"HostInfo_Permissions.Help\")} \n                        text={props.applicationInfo.casPermissions || defaultPlaceHolder} />\n                </div>\n            </GridSystem>\n        </div>;\n    }\n}\n\nApplication.propTypes = {   \n    applicationInfo: PropTypes.object.isRequired,\n    isApplicationInfoLoaded: PropTypes.bool.isRequired,\n    errorMessage: PropTypes.string,\n    onRetrieveApplicationInfo: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {    \n    return {\n        applicationInfo: state.applicationTab.applicationInfo,\n        isApplicationInfoLoaded: state.applicationTab.isApplicationInfoLoaded,\n        errorMessage: state.applicationTab.errorMessage\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        ...bindActionCreators ({\n            onRetrieveApplicationInfo: ApplicationTabActions.loadApplicationInfo     \n        }, dispatch)\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Application);","import React, {Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { GridSystem } from \"@dnnsoftware/dnn-react-common\";\nimport InfoBlock from \"../common/InfoBlock\";\nimport Localization from \"../../localization\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport WebTabActions from \"../../actions/webTab\";\nimport utils from \"../../utils\";\n\nimport \"./tabs.less\";\n\nconst defaultPlaceHolder = \"...\";\n\nclass Web extends Component {\n    componentDidMount() {\n        this.props.onRetrieveWebServerInfo();\n    }\n\n    UNSAFE_componentWillReceiveProps(newProps) {\n        if (this.props.errorMessage !== newProps.errorMessage && newProps.errorMessage) {\n            utils.notifyError(newProps.errorMessage);\n        }\n    }\n\n    render() {\n        const {props} = this;\n\n        return <div className=\"dnn-servers-info-panel\">\n            <GridSystem>\n                <div>\n                    <InfoBlock label={Localization.get(\"ServerInfo_OSVersion\")} \n                        tooltip={Localization.get(\"ServerInfo_OSVersion.Help\")} \n                        text={props.webServerInfo.osVersion || defaultPlaceHolder} />   \n\n                    <InfoBlock label={Localization.get(\"ServerInfo_IISVersion\")} \n                        tooltip={Localization.get(\"ServerInfo_IISVersion.Help\")} \n                        text={props.webServerInfo.iisVersion || defaultPlaceHolder} /> \n\n                    <InfoBlock label={Localization.get(\"ServerInfo_Framework\")} \n                        tooltip={Localization.get(\"ServerInfo_Framework.Help\")} \n                        text={props.webServerInfo.framework || defaultPlaceHolder} /> \n\n                    <div className=\"tooltipAdjustment\">\n                        <InfoBlock label={Localization.get(\"ServerInfo_Identity\")} \n                            tooltip={Localization.get(\"ServerInfo_Identity.Help\")} \n                            text={props.webServerInfo.identity || defaultPlaceHolder} />\n                    </div> \n\n                    <InfoBlock label={Localization.get(\"ServerInfo_HostName\")} \n                        tooltip={Localization.get(\"ServerInfo_HostName.Help\")} \n                        text={props.webServerInfo.hostName || defaultPlaceHolder} /> \n                </div>\n                <div>\n                    <InfoBlock label={Localization.get(\"ServerInfo_PhysicalPath\")} \n                        tooltip={Localization.get(\"ServerInfo_PhysicalPath.Help\")} \n                        text={props.webServerInfo.physicalPath || defaultPlaceHolder} /> \n\n                    <InfoBlock label={Localization.get(\"ServerInfo_Url\")} \n                        tooltip={Localization.get(\"ServerInfo_Url.Help\")} \n                        text={props.webServerInfo.url || defaultPlaceHolder} /> \n\n                    <InfoBlock label={Localization.get(\"ServerInfo_RelativePath\")} \n                        tooltip={Localization.get(\"ServerInfo_RelativePath.Help\")} \n                        text={props.webServerInfo.relativePath || defaultPlaceHolder} /> \n\n                    <InfoBlock label={Localization.get(\"ServerInfo_ServerTime\")} \n                        tooltip={Localization.get(\"ServerInfo_ServerTime.Help\")} \n                        text={props.webServerInfo.serverTime || defaultPlaceHolder} />\n                </div>\n            </GridSystem>\n        </div>;\n    }\n}\n\nWeb.propTypes = {   \n    webServerInfo: PropTypes.object.isRequired,\n    errorMessage: PropTypes.string,\n    onRetrieveWebServerInfo: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {    \n    return {\n        webServerInfo: state.webTab.webServerInfo,\n        errorMessage: state.webTab.errorMessage\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        ...bindActionCreators ({\n            onRetrieveWebServerInfo: WebTabActions.loadWebServerInfo     \n        }, dispatch)\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Web);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { GridCell, TextOverflowWrapper as OverflowText } from \"@dnnsoftware/dnn-react-common\";\nimport Localization from \"../../../localization\";\nimport util from \"../../../utils\";\n\nexport default class BackupGrid extends Component {\n\n    getBackUpsGridRows() {\n        if (this.props.backups && this.props.backups.length > 0) {\n            const rows = this.props.backups.map((field, i) => {\n                return <div className=\"row\" key={i}>\n                    <GridCell columnSize={45}><OverflowText text={field.name} maxWidth={290} /></GridCell>\n                    <GridCell columnSize={15}>{util.formatDateNoTime(field.startDate)}</GridCell>\n                    <GridCell columnSize={15}>{util.formatDateNoTime(field.finishDate)}</GridCell>\n                    <GridCell columnSize={10}>{util.formatNumeric(field.size)}</GridCell>\n                    <GridCell columnSize={15}>{field.backupType}</GridCell>\n                </div>;\n            });\n            return rows;\n        }\n        return <div className=\"row\">\n            <GridCell className=\"alert-message\" columnSize={100}>{Localization.get(\"NoBackups\")}</GridCell>\n        </div>;\n    }\n\n    render() {\n        const rows = this.getBackUpsGridRows();\n\n        return <div className=\"grid\">\n            <div className=\"row header\">\n                <GridCell columnSize={45}>{Localization.get(\"BackupName\")}</GridCell>\n                <GridCell columnSize={15}>{Localization.get(\"BackupStarted\")}</GridCell>\n                <GridCell columnSize={15}>{Localization.get(\"BackupFinished\")}</GridCell>\n                <GridCell columnSize={10}>{Localization.get(\"BackupSize\")}</GridCell>\n                <GridCell columnSize={15}>{Localization.get(\"BackupType\")}</GridCell>\n            </div>\n            {rows}\n        </div>;\n    }\n}\n\nBackupGrid.propTypes = {   \n    backups: PropTypes.array\n};","import React, {Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { GridCell, TextOverflowWrapper as OverflowText } from \"@dnnsoftware/dnn-react-common\";\nimport Localization from \"../../../localization\";\nimport util from \"../../../utils\";\n\nexport default class FilesGrid extends Component {\n\n    getFilesGridRows() {\n        if (this.props.files && this.props.files.length > 0) {\n            const rows = this.props.files.map((field, i) => {\n                return <div className=\"row\" key={i}>\n                    <GridCell columnSize={30}><OverflowText text={field.name} /></GridCell>\n                    <GridCell columnSize={15}>{util.formatNumeric2Decimals(field.size)} Mb</GridCell>\n                    <GridCell columnSize={15}>{field.fileType}</GridCell>\n                    <GridCell columnSize={40}><OverflowText text={field.fileName} maxWidth={290} /></GridCell>\n                </div>;\n            });\n            return rows;\n        }\n        return false;\n    }\n\n    render() {\n        const rows = this.getFilesGridRows();\n\n        return <div className=\"grid\">\n            <div className=\"row header\">\n                <GridCell columnSize={30}>{Localization.get(\"Name\")}</GridCell>\n                <GridCell columnSize={15}>{Localization.get(\"Size\")}</GridCell>\n                <GridCell columnSize={15}>{Localization.get(\"FileType\")}</GridCell>\n                <GridCell columnSize={40}>{Localization.get(\"FileName\")}</GridCell>\n            </div>\n            {rows}\n        </div>;\n    }\n}\n\nFilesGrid.propTypes = {   \n    files: PropTypes.array\n};","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { GridSystem, Label, GridCell } from \"@dnnsoftware/dnn-react-common\";\nimport InfoBlock from \"../../common/InfoBlock\";\nimport BackupGrid from \"./BackupGrid\";\nimport FilesGrid from \"./FilesGrid\";\nimport Localization from \"../../../localization\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport DatabaseTabActions from \"../../../actions/databaseTab\";\nimport utils from \"../../../utils\";\n\nimport \"../tabs.less\";\n\nconst defaultPlaceHolder = \"...\";\n\nclass Database extends Component {\n    componentDidMount() {\n        this.props.onRetrieveDatabaseServerInfo();\n    }\n\n    UNSAFE_componentWillReceiveProps(newProps) {\n        if (this.props.errorMessage !== newProps.errorMessage && newProps.errorMessage) {\n            utils.notifyError(newProps.errorMessage);\n        }\n    }\n\n    render() {\n        const {props} = this;\n\n        return <GridCell>\n            <GridCell className=\"dnn-servers-info-panel\">\n                <GridSystem>\n                    <GridCell>\n                        <InfoBlock label={Localization.get(\"DbInfo_ProductVersion\")}\n                            tooltip={Localization.get(\"DbInfo_ProductVersion.Help\")}\n                            text={props.databaseInfo.productVersion || defaultPlaceHolder} />\n\n                        <InfoBlock label={Localization.get(\"DbInfo_ServicePack\")}\n                            tooltip={Localization.get(\"DbInfo_ServicePack.Help\")}\n                            text={props.databaseInfo.servicePack || defaultPlaceHolder} />\n\n                        <InfoBlock label={Localization.get(\"DbInfo_ProductEdition\")}\n                            tooltip={Localization.get(\"DbInfo_ProductEdition.Help\")}\n                            text={props.databaseInfo.productEdition || defaultPlaceHolder} />\n                    </GridCell>\n                    <GridCell>\n                        <InfoBlock label={Localization.get(\"DbInfo_SoftwarePlatform\")}\n                            tooltip={Localization.get(\"DbInfo_SoftwarePlatform.Help\")}\n                            text={props.databaseInfo.softwarePlatform || defaultPlaceHolder} />\n                    </GridCell>\n                </GridSystem>\n            </GridCell>\n            <GridCell className=\"dnn-servers-grid-panel\">\n                <Label className=\"header-title\" label={Localization.get(\"plBackups\")} />\n                <BackupGrid backups={props.databaseInfo.backups} />\n            </GridCell>\n            <GridCell className=\"dnn-servers-grid-panel\" style={{ paddingBottom: 55 }}>\n                <Label className=\"header-title\" label={Localization.get(\"plFiles\")} />\n                <FilesGrid files={props.databaseInfo.files} />\n            </GridCell>\n        </GridCell>;\n    }\n}\n\nDatabase.propTypes = {\n    databaseInfo: PropTypes.object.isRequired,\n    errorMessage: PropTypes.string,\n    onRetrieveDatabaseServerInfo: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n    return {\n        databaseInfo: state.databaseTab.databaseServerInfo,\n        errorMessage: state.databaseTab.errorMessage\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        ...bindActionCreators({\n            onRetrieveDatabaseServerInfo: DatabaseTabActions.loadDatabaseServerInfo\n        }, dispatch)\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Database);","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Tooltip } from \"@dnnsoftware/dnn-react-common\";\nimport localization from \"../../localization\";\n\nconst normalMargin = \"-3px 0 0 5px\";\nconst switchMargin = \"5px 0 0 5px\";\n\nexport default class GlobalIcon extends Component {\n\n    render() {\n        const margin = this.props.isSwitch ? switchMargin : normalMargin;\n        return <Tooltip type=\"global\"\n            messages={[localization.get(\"GlobalSettings\")]}\n            style={Object.assign({ float: \"left\", height: \"20\", position: \"static\", margin: margin }, this.props.tooltipStyle)} />;\n    }\n}\n\nGlobalIcon.propTypes = {    \n    isSwitch: PropTypes.bool.isRequired,\n    tooltipStyle: PropTypes.object  \n};\n\nGlobalIcon.defaultProps = {\n    isSwitch: false\n};","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Label, InputGroup, RadioButtons } from \"@dnnsoftware/dnn-react-common\";\nimport GlobalIcon from \"./GlobalIcon\";\n\nexport default class RadioButtonBlock extends Component {\n\n    render() {\n        const {props} = this;\n\n        return <InputGroup>\n            <Label className=\"title\"\n                tooltipMessage={props.tooltip}\n                label={props.label} style={{width: \"auto\"}}/>\n            {props.isGlobal && <GlobalIcon /> }\n            <RadioButtons\n                options={props.options}                \n                value={props.value}\n                onChange={props.onChange} />\n        </InputGroup>;\n    }\n}\n\nRadioButtonBlock.propTypes = {\n    label: PropTypes.string,\n    tooltip: PropTypes.string,\n    options: PropTypes.array.isRequired,\n    value: PropTypes.string,\n    onChange: PropTypes.func.isRequired,\n    isGlobal: PropTypes.bool.isRequired\n};\n\nRadioButtonBlock.defaultProps = {\n    isGlobal: false\n};","import React, {Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Label, InputGroup, SingleLineInputWithError } from \"@dnnsoftware/dnn-react-common\";\nimport GlobalIcon from \"./GlobalIcon\";\n\nexport default class EditBlock extends Component {\n    \n    render() {\n        const {props} = this;\n\n        return <InputGroup>\n            <Label className=\"title\"\n                tooltipMessage={props.tooltip}\n                label={props.label} style={{width: \"auto\"}} />\n            {props.isGlobal && <GlobalIcon /> }\n            <SingleLineInputWithError \n                value={props.value} \n                type={props.type} \n                onChange={props.onChange}\n                error={!!props.error} \n                errorMessage={props.error} />\n        </InputGroup>;\n    }\n}\n\nEditBlock.propTypes = {\n    label: PropTypes.string,\n    tooltip: PropTypes.string,\n    value: PropTypes.string,\n    isGlobal: PropTypes.bool.isRequired,\n    type: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string\n};\n\nEditBlock.defaultProps = {\n    isGlobal: false\n};","import React, {Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Label, InputGroup, Switch } from \"@dnnsoftware/dnn-react-common\";\nimport GlobalIcon from \"./GlobalIcon\";\n\nexport default class InfoBlock extends Component {\n\n    render() {\n        const {props} = this;\n\n        return <InputGroup>\n            <Label className=\"title\"\n                tooltipMessage={props.tooltip}\n                label={props.label} style={{width: \"auto\", \"margin-top\": \"8px\"}} />   \n            {props.isGlobal && <GlobalIcon isSwitch={true} tooltipStyle={this.props.globalTooltipStyle} /> }         \n            <Switch labelHidden={false}\n                onText={props.onText}\n                offText={props.offText}\n                readOnly={props.readOnly}\n                value={props.value}\n                onChange={props.onChange} \n                style={{float: \"right\"}} />\n        </InputGroup>;\n    }\n}\n\nInfoBlock.propTypes = {\n    label: PropTypes.string,\n    onText: PropTypes.string,\n    offText: PropTypes.string,\n    tooltip: PropTypes.string,\n    readOnly: PropTypes.bool,\n    value: PropTypes.bool.isRequired,\n    onChange: PropTypes.func.isRequired,\n    isGlobal: PropTypes.bool.isRequired,\n    globalTooltipStyle: PropTypes.object  \n};\n\nInfoBlock.defaultProps = {\n    isGlobal: false,\n    readOnly: false\n};","import serviceFramework from \"./serviceFramework\";\nimport utils from \"../utils\";\n\nfunction getControllerName() {\n    return utils.isHostUser() ? \"ServerSettingsSmtpHost\" : \"ServerSettingsSmtpAdmin\";\n}\n\nconst getSmtpSettings = function () {    \n    return serviceFramework.get(getControllerName(), \"GetSmtpSettings\");\n};\n\nconst updateSmtpSettings = function (parameters) {    \n    return serviceFramework.post(getControllerName(), \"UpdateSmtpSettings\", parameters);\n};\n\nconst sendTestEmail = function (parameters) {    \n    return serviceFramework.post(getControllerName(), \"SendTestEmail\", parameters);\n};\n\nconst smtpServerService = {\n    getSmtpSettings,\n    updateSmtpSettings,\n    sendTestEmail\n};\n\nexport default smtpServerService; ","import {smtpServerTab as ActionTypes}  from \"../constants/actionTypes\";\nimport smtpServerService from \"../services/smtpServerService\";\nimport localization from \"../localization\";\n\nconst smtpServeTabActions = {\n    loadSmtpServerInfo() {       \n        return (dispatch) => {\n            dispatch({\n                type: ActionTypes.LOAD_SMTP_SERVER_TAB               \n            });        \n            \n            smtpServerService.getSmtpSettings().then(response => {\n                dispatch({\n                    type: ActionTypes.LOADED_SMTP_SERVER_TAB,\n                    payload: {\n                        smtpServerInfo: response\n                    }\n                });  \n            }).catch(() => {\n                dispatch({\n                    type: ActionTypes.ERROR_LOADING_SMTP_SERVER_TAB,\n                    payload: {\n                        errorMessage: localization.get(\"errorMessageLoadingSmtpServerTab\")\n                    }\n                });\n            });        \n        };\n    },\n    changeSmtpServerMode(smtpServeMode) {\n        return (dispatch) => {\n            dispatch({\n                type: ActionTypes.CHANGE_SMTP_SERVER_MODE,\n                payload: {\n                    smtpServeMode\n                }\n            });\n        };\n    },\n    changeSmtpAuthentication(smtpAuthentication) {\n        return (dispatch) => {\n            dispatch({\n                type: ActionTypes.CHANGE_SMTP_AUTHENTICATION,\n                payload: {\n                    smtpAuthentication\n                }\n            });\n        };\n    },\n    changeSmtpConfigurationValue(key, value) {\n        return (dispatch) => {\n            dispatch({\n                type: ActionTypes.CHANGE_SMTP_CONFIGURATION_VALUE,\n                payload: { \n                    field: key,\n                    value\n                }\n            });  \n        };\n    },\n    updateSmtpServerSettings(parameters) {       \n        return (dispatch) => {\n            dispatch({\n                type: ActionTypes.UPDATE_SMTP_SERVER_SETTINGS               \n            });        \n            \n            smtpServerService.updateSmtpSettings(parameters).then(response => {\n                dispatch({\n                    type: ActionTypes.UPDATED_SMTP_SERVER_SETTINGS,\n                    payload: {\n                        success: response.success\n                    }\n                });  \n            }).catch(() => {\n                dispatch({\n                    type: ActionTypes.ERROR_UPDATING_SMTP_SERVER_SETTINGS,\n                    payload: {\n                        errorMessage: localization.get(\"errorMessageUpdatingSmtpServerTab\")\n                    }\n                });\n            });        \n        };\n    },\n    sendTestEmail(parameters) {       \n        return (dispatch) => {\n            dispatch({\n                type: ActionTypes.SEND_TEST_EMAIL               \n            });        \n            \n            smtpServerService.sendTestEmail(parameters).then(response => {\n                dispatch({\n                    type: ActionTypes.SENT_TEST_EMAIL,\n                    payload: {\n                        success: response.success,\n                        infoMessage: response.confirmationMessage,\n                        errorMessage: response.errMessage\n                    }\n                });  \n            }).catch((data) => {\n                let response = JSON.parse(data.responseText);\n                dispatch({\n                    type: ActionTypes.ERROR_SENDING_TEST_EMAIL,\n                    payload: {\n                        errorMessage: response.errMessage\n                    }\n                });\n            });        \n        };\n    }\n};\n\nexport default smtpServeTabActions;","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { GridSystem, Button } from \"@dnnsoftware/dnn-react-common\";\nimport RadioButtonBlock from \"../common/RadioButtonBlock\";\nimport EditBlock from \"../common/EditBlock\";\nimport SwitchBlock from \"../common/SwitchBlock\";\nimport localization from \"../../localization\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport SmtpServerTabActions from \"../../actions/smtpServerTab\";\nimport utils from \"../../utils\";\n\nclass SmtpServer extends Component {\n\n    componentDidMount() {\n        this.props.onRetrieveSmtpServerInfo();\n    }\n\n    UNSAFE_componentWillReceiveProps(newProps) {\n        if (this.props.infoMessage !== newProps.infoMessage && newProps.infoMessage) {\n            utils.notify(newProps.infoMessage);\n        }\n\n        if (this.props.errorMessage !== newProps.errorMessage && newProps.errorMessage) {\n            utils.notifyError(newProps.errorMessage);\n        }\n    }\n\n    onChangeSmtpServerMode(mode) {\n        this.props.onChangeSmtpServerMode(mode);\n    }\n\n    onChangeAuthenticationMode(authentication) {\n        this.props.onChangeSmtpAuthentication(authentication);\n    }\n\n    onChangeSmtpEnableSsl(enabled) {\n        this.props.onChangeSmtpConfigurationValue(\"enableSmtpSsl\", enabled);\n    }\n\n    onChangeField(key, event) {\n        this.props.onChangeSmtpConfigurationValue(key, event.target.value);\n    }   \n\n    onSave() {\n        const {props} = this;\n\n        if (this.areThereValidationError()) {\n            return;\n        } \n\n\n        const smtpSettings = props.smtpServerInfo.smtpServerMode === \"h\" && utils.isHostUser() ? props.smtpServerInfo.host \n            : props.smtpServerInfo.site;\n\n        const updateRequest = {\n            smtpServerMode: props.smtpServerInfo.smtpServerMode,\n            smtpServer: smtpSettings.smtpServer,\n            smtpConnectionLimit: smtpSettings.smtpConnectionLimit,\n            smtpMaxIdleTime: smtpSettings.smtpMaxIdleTime,\n            smtpAuthentication: smtpSettings.smtpAuthentication,\n            smtpUsername: smtpSettings.smtpUserName,\n            smtpPassword: smtpSettings.smtpPassword,\n            smtpHostEmail: smtpSettings.smtpHostEmail,\n            enableSmtpSsl: smtpSettings.enableSmtpSsl,\n            messageSchedulerBatchSize: props.smtpServerInfo.host.messageSchedulerBatchSize\n        };\n        props.onUpdateSmtpServerSettings(updateRequest);\n    }\n\n    areThereValidationError() {\n        let areErrors = false;\n        const errors = this.props.errors;\n        for (let prop in errors) {\n            if (errors[prop]) {\n                return true;\n            }\n        }\n\n        return areErrors;\n    }\n\n    onTestSmtpSettings() {\n        const {props} = this;\n\n        if (this.areThereValidationError()) {\n            return;\n        } \n\n        let smtpSettings = {};\n        if (props.smtpServerInfo.smtpServerMode === \"h\" && utils.isHostUser()) {\n            smtpSettings = props.smtpServerInfo.host;\n        }\n        if (props.smtpServerInfo.smtpServerMode === \"p\") {\n            smtpSettings = props.smtpServerInfo.site;\n        }\n        \n        const sendEmailRequest = {\n            smtpServerMode: props.smtpServerInfo.smtpServerMode,\n            smtpServer: smtpSettings.smtpServer,\n            smtpAuthentication: smtpSettings.smtpAuthentication,\n            smtpUsername: smtpSettings.smtpUserName,\n            smtpPassword: smtpSettings.smtpPassword,\n            enableSmtpSsl: smtpSettings.enableSmtpSsl\n        };\n        props.onSendTestEmail(sendEmailRequest);    \n    }   \n\n    getSmtpServerOptions() {\n        return [{\n            label: localization.get(\"GlobalSmtpHostSetting\"),\n            value: \"h\"\n        },\n        {\n            label: localization.get(\"SiteSmtpHostSetting\").replace(\"{0}\", this.props.smtpServerInfo.portalName || \"\"),\n            value: \"p\"\n        }\n        ];\n    }\n\n    getSmtpAuthenticationOptions() {\n        return [{\n            label: localization.get(\"SMTPAnonymous\"),\n            value: \"0\"\n        },\n        {\n            label: localization.get(\"SMTPBasic\"),\n            value: \"1\"\n        },\n        {\n            label: localization.get(\"SMTPNTLM\"),\n            value: \"2\"\n        }\n        ];\n    }\n\n\n    render() {\n        const {props} = this;\n        const areGlobalSettings = props.smtpServerInfo.smtpServerMode === \"h\";\n        const selectedSmtpSettings = (areGlobalSettings ? props.smtpServerInfo.host : props.smtpServerInfo.site) || {};\n        const credentialVisible = selectedSmtpSettings.smtpAuthentication === \"1\";\n        const smtpSettingsVisible = utils.isHostUser() || !areGlobalSettings;\n\n        return <div className=\"dnn-servers-info-panel-big smtpServerSettingsTab\">\n            <GridSystem>\n                <div className=\"leftPane\">\n                    <div className=\"tooltipAdjustment border-bottom\">\n                        <RadioButtonBlock options={this.getSmtpServerOptions()}\n                            label={localization.get(\"plSMTPMode\")}\n                            tooltip={localization.get(\"plSMTPMode.Help\")}\n                            onChange={this.onChangeSmtpServerMode.bind(this)}\n                            value={props.smtpServerInfo.smtpServerMode} />\n                    </div>\n                    <div className=\"tooltipAdjustment\">\n                        {smtpSettingsVisible && \n                            <div>\n                                <EditBlock label={localization.get(\"plSMTPServer\")}\n                                    tooltip={localization.get(\"plSMTPServer.Help\")}\n                                    value={selectedSmtpSettings.smtpServer}\n                                    isGlobal={areGlobalSettings} \n                                    onChange={this.onChangeField.bind(this, \"smtpServer\")} \n                                    error={props.errors[\"smtpServer\"]} />\n                        \n                                <EditBlock label={localization.get(\"plConnectionLimit\")}\n                                    tooltip={localization.get(\"plConnectionLimit.Help\")}\n                                    value={selectedSmtpSettings.smtpConnectionLimit} \n                                    isGlobal={areGlobalSettings}\n                                    onChange={this.onChangeField.bind(this, \"smtpConnectionLimit\")} \n                                    error={props.errors[\"smtpConnectionLimit\"]} />\n                        \n                                <EditBlock label={localization.get(\"plMaxIdleTime\")}\n                                    tooltip={localization.get(\"plMaxIdleTime.Help\")}\n                                    value={selectedSmtpSettings.smtpMaxIdleTime} \n                                    isGlobal={areGlobalSettings}\n                                    onChange={this.onChangeField.bind(this, \"smtpMaxIdleTime\")}\n                                    error={props.errors[\"smtpMaxIdleTime\"]} />\n                            </div>\n                        }\n                        {smtpSettingsVisible && areGlobalSettings &&\n                            <EditBlock label={localization.get(\"plBatch\")}\n                                tooltip={localization.get(\"plBatch.Help\")}\n                                value={props.smtpServerInfo.host.messageSchedulerBatchSize} \n                                isGlobal={areGlobalSettings}\n                                onChange={this.onChangeField.bind(this, \"messageSchedulerBatchSize\")}\n                                error={props.errors[\"messageSchedulerBatchSize\"]} />\n                        }\n                    </div>\n                </div>\n                <div className=\"rightPane\">\n                    {smtpSettingsVisible &&\n                        <div className=\"tooltipAdjustment border-bottom\">\n                            <RadioButtonBlock options={this.getSmtpAuthenticationOptions()}\n                                label={localization.get(\"plSMTPAuthentication\")}\n                                tooltip={localization.get(\"plSMTPAuthentication.Help\")}\n                                onChange={this.onChangeAuthenticationMode.bind(this)}\n                                value={selectedSmtpSettings.smtpAuthentication || \"0\"} \n                                isGlobal={areGlobalSettings} />\n                        </div>\n                    }\n                    <div className=\"tooltipAdjustment border-bottom\">\n                        {smtpSettingsVisible && credentialVisible && \n                            <div>\n                                <EditBlock label={localization.get(\"plSMTPUsername\")}\n                                    tooltip={localization.get(\"plSMTPUsername.Help\")}\n                                    value={selectedSmtpSettings.smtpUserName} \n                                    isGlobal={areGlobalSettings}\n                                    onChange={this.onChangeField.bind(this, \"smtpUserName\")} \n                                    error={props.errors[\"smtpUserName\"]} />                   \n                            \n                                <EditBlock label={localization.get(\"plSMTPPassword\")}\n                                    tooltip={localization.get(\"plSMTPPassword.Help\")}\n                                    value={selectedSmtpSettings.smtpPassword} \n                                    isGlobal={areGlobalSettings} \n                                    type=\"password\"\n                                    onChange={this.onChangeField.bind(this, \"smtpPassword\")}\n                                    error={props.errors[\"smtpPassword\"]}  />\n                            </div>     \n                        }\n                        {smtpSettingsVisible &&\n                        <SwitchBlock label={localization.get(\"plSMTPEnableSSL\")}\n                            onText={localization.get(\"SwitchOn\")}\n                            offText={localization.get(\"SwitchOff\")}\n                            tooltip={localization.get(\"plSMTPEnableSSL.Help\")}\n                            value={selectedSmtpSettings.enableSmtpSsl}\n                            onChange={this.onChangeSmtpEnableSsl.bind(this)}\n                            isGlobal={areGlobalSettings} />\n                        }              \n                    </div>\n                    {smtpSettingsVisible && areGlobalSettings &&\n                        <EditBlock label={localization.get(\"plHostEmail\")}\n                            tooltip={localization.get(\"plHostEmail.Help\")}\n                            value={selectedSmtpSettings.smtpHostEmail}\n                            isGlobal={true}\n                            onChange={this.onChangeField.bind(this, \"smtpHostEmail\")}\n                            error={props.errors[\"smtpHostEmail\"]} />\n                    }\n                </div>\n            </GridSystem>\n            <div className=\"clear\" />\n            <div className=\"buttons-panel\">\n                <Button type=\"secondary\" \n                    onClick={this.onTestSmtpSettings.bind(this)}>{localization.get(\"EmailTest\")}</Button>\n                <Button type=\"primary\" \n                    onClick={this.onSave.bind(this)}>{localization.get(\"SaveButtonText\")}</Button>\n            </div>\n        </div>;\n    }\n}\n\n\nSmtpServer.propTypes = {   \n    smtpServerInfo: PropTypes.object.isRequired,\n    errorMessage: PropTypes.string,\n    onRetrieveSmtpServerInfo: PropTypes.func.isRequired,\n    onChangeSmtpServerMode: PropTypes.func.isRequired,\n    onChangeSmtpAuthentication: PropTypes.func.isRequired,\n    onChangeSmtpConfigurationValue: PropTypes.func.isRequired,\n    onUpdateSmtpServerSettings: PropTypes.func.isRequired,\n    infoMessage: PropTypes.string,\n    onSendTestEmail: PropTypes.func.isRequired,\n    errors: PropTypes.array\n};\n\nfunction mapStateToProps(state) {    \n    return {\n        smtpServerInfo: state.smtpServer.smtpServerInfo,\n        errorMessage: state.smtpServer.errorMessage,\n        infoMessage: state.smtpServer.infoMessage,\n        errors: state.smtpServer.errors\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        ...bindActionCreators ({\n            onRetrieveSmtpServerInfo: SmtpServerTabActions.loadSmtpServerInfo,\n            onChangeSmtpServerMode: SmtpServerTabActions.changeSmtpServerMode,\n            onChangeSmtpAuthentication: SmtpServerTabActions.changeSmtpAuthentication,\n            onChangeSmtpConfigurationValue: SmtpServerTabActions.changeSmtpConfigurationValue,\n            onUpdateSmtpServerSettings: SmtpServerTabActions.updateSmtpServerSettings,\n            onSendTestEmail: SmtpServerTabActions.sendTestEmail\n        }, dispatch)\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SmtpServer);\n","import React, {Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Label, InputGroup, Dropdown } from \"@dnnsoftware/dnn-react-common\";\nimport GlobalIcon from \"./GlobalIcon\";\n\nexport default class DropdownBlock extends Component {\n    \n    render() {\n        const {props} = this;\n\n        return <InputGroup>\n            <Label className=\"title\"\n                tooltipMessage={props.tooltip}\n                label={props.label} style={{width: \"auto\"}} />\n            {props.isGlobal && <GlobalIcon /> }\n            <Dropdown style={{width:\"100%\"}}\n                options={props.options}\n                value={props.value}\n                onSelect={props.onSelect}/>\n        </InputGroup>;\n    }\n}\n\nDropdownBlock.propTypes = {\n    label: PropTypes.string,\n    tooltip: PropTypes.string,\n    options: PropTypes.array.isRequired,\n    value: PropTypes.string,\n    isGlobal: PropTypes.bool.isRequired,\n    onSelect: PropTypes.func.isRequired\n};\n\nDropdownBlock.defaultProps = {\n    isGlobal: false\n};","import React, {Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { GridCell, SvgIcons } from \"@dnnsoftware/dnn-react-common\";\nimport \"./style.less\";\n\nexport default class WarningBlock extends Component {\n    \n    render() {\n        /* eslint-disable react/no-danger */\n        const {props} = this;\n\n        return <GridCell className=\"serversTabWarningInfo\">\n            <div dangerouslySetInnerHTML={{ __html: SvgIcons.ErrorStateIcon }} />\n            <div className=\"dnn-label title\"\n                dangerouslySetInnerHTML={{ __html: props.label}} />\n        </GridCell>;\n    }\n}\n\nWarningBlock.propTypes = {\n    label: PropTypes.string\n};","import serviceFramework from \"./serviceFramework\";\n\nconst convertKeyValueToLabelValue = function (list) {\n    return list.map((item) => {\n        return {\n            value: item.Value,\n            label: item.Key\n        };\n    });\n};\n\nconst getPerformanceSettings = function () {\n    return serviceFramework.get(\"ServerSettingsPerformance\", \"GetPerformanceSettings\")\n        .then(response => {\n            return {\n                portalName: response.PortalName,\n                cachingProvider: response.CachingProvider,\n                pageStatePersistence: response.PageStatePersistence,\n                moduleCacheProvider: response.ModuleCacheProvider,\n                pageCacheProvider: response.PageCacheProvider,\n                cacheSetting: response.CacheSetting,\n                authCacheability: response.AuthCacheability,\n                unauthCacheability: response.UnauthCacheability,\n                sslForCacheSynchronization: response.SslForCacheSynchronization,\n                clientResourcesManagementMode: response.ClientResourcesManagementMode,\n                \n                currentHostVersion: response.CurrentHostVersion,\n                hostEnableCompositeFiles: response.HostEnableCompositeFiles,\n                hostMinifyCss: response.HostMinifyCss,\n                hostMinifyJs: response.HostMinifyJs,\n                \n                currentPortalVersion: response.CurrentPortalVersion,\n                portalEnableCompositeFiles: response.PortalEnableCompositeFiles,\n                portalMinifyCss: response.PortalMinifyCss,\n                portalMinifyJs: response.PortalMinifyJs,\n                \n                cachingProviderOptions: convertKeyValueToLabelValue(response.CachingProviderOptions),\n                pageStatePersistenceOptions: convertKeyValueToLabelValue(response.PageStatePersistenceOptions),\n                moduleCacheProviders: convertKeyValueToLabelValue(response.ModuleCacheProviders),\n                pageCacheProviders: convertKeyValueToLabelValue(response.PageCacheProviders),\n                cacheSettingOptions: convertKeyValueToLabelValue(response.CacheSettingOptions),\n                authCacheabilityOptions: convertKeyValueToLabelValue(response.AuthCacheabilityOptions),\n                unauthCacheabilityOptions: convertKeyValueToLabelValue(response.UnauthCacheabilityOptions)\n            };\n        });\n};\n\nconst save = function (performanceSettings) {\n    const request = {\n        CachingProvider: performanceSettings.cachingProvider, \n        PageStatePersistence: performanceSettings.pageStatePersistence, \n        ModuleCacheProvider: performanceSettings.moduleCacheProvider, \n        PageCacheProvider: performanceSettings.pageCacheProvider, \n        CacheSetting: performanceSettings.cacheSetting, \n        AuthCacheability: performanceSettings.authCacheability, \n        UnauthCacheability: performanceSettings.unauthCacheability, \n        SslForCacheSynchronization: performanceSettings.sslForCacheSynchronization, \n        ClientResourcesManagementMode: performanceSettings.clientResourcesManagementMode\n    };\n    \n    if (performanceSettings.clientResourcesManagementMode === \"h\") {\n        request.CurrentHostVersion = performanceSettings.currentHostVersion; \n        request.HostEnableCompositeFiles = performanceSettings.hostEnableCompositeFiles; \n        request.HostMinifyCss = performanceSettings.hostMinifyCss; \n        request.HostMinifyJs = performanceSettings.hostMinifyJs; \n        \n    } else {\n        request.CurrentPortalVersion = performanceSettings.currentPortalVersion; \n        request.PortalEnableCompositeFiles = performanceSettings.portalEnableCompositeFiles; \n        request.PortalMinifyCss = performanceSettings.portalMinifyCss; \n        request.PortalMinifyJs = performanceSettings.portalMinifyJs;\n    }\n    \n    return serviceFramework.post(\"ServerSettingsPerformance\", \"UpdatePerformanceSettings\", request);\n};\n\nconst incrementVersion = function (version, isGlobalSetting) {\n    if (isGlobalSetting) {\n        return serviceFramework.post(\"ServerSettingsPerformance\", \"IncrementHostVersion\");\n    }\n    \n    return serviceFramework.post(\"ServerSettingsPerformance\", \"IncrementPortalVersion\");\n};\n\nconst performanceTabService = {\n    getPerformanceSettings: getPerformanceSettings,\n    save: save,\n    incrementVersion: incrementVersion\n};\n\nexport default performanceTabService; ","import {performanceTab as ActionTypes}  from \"../constants/actionTypes\";\nimport performanceTabService from \"../services/performanceTabService\";\nimport localization from \"../localization\";\n\nconst performanceTabActions = {\n    loadPerformanceSettings() {       \n        return (dispatch) => {\n            dispatch({\n                type: ActionTypes.LOAD_PERFORMANCE_TAB               \n            });        \n            \n            performanceTabService.getPerformanceSettings().then(response => {\n                dispatch({\n                    type: ActionTypes.LOADED_PERFORMANCE_TAB,\n                    payload: {\n                        performanceSettings: response\n                    }\n                });  \n            }).catch(() => {\n                dispatch({\n                    type: ActionTypes.ERROR_LOADING_PERFORMANCE_TAB,\n                    payload: {\n                        errorMessage: localization.get(\"errorMessageLoadingPerformanceTab\")\n                    }\n                });\n            });        \n        };\n    },\n    changePerformanceSettingsValue(key, value) {\n        return (dispatch) => {\n            dispatch({\n                type: ActionTypes.CHANGE_PERFORMANCE_SETTINGS_VALUE,\n                payload: { \n                    field: key,\n                    value\n                }\n            });  \n        };\n    },\n    incrementVersion(version, isGlobalSettings) {\n        return (dispatch) => {\n            dispatch({\n                type: ActionTypes.INCREMENT_VERSION               \n            });        \n            \n            const key = isGlobalSettings ? \"currentHostVersion\" : \"currentPortalVersion\" ;\n            performanceTabService.incrementVersion(version, isGlobalSettings).then(response => {\n                dispatch({\n                    type: ActionTypes.INCREMENTED_VERSION,\n                    payload: {\n                        success: response.success\n                    }\n                });  \n                dispatch({\n                    type: ActionTypes.CHANGE_PERFORMANCE_SETTINGS_VALUE,\n                    payload: { \n                        field: key,\n                        value: parseInt(version, 10) + 1\n                    }\n                });  \n            }).catch(() => {\n                dispatch({\n                    type: ActionTypes.ERROR_INCREMENTING_VERSION,\n                    payload: {\n                        errorMessage: localization.get(\"errorMessageIncrementingVersion\")\n                    }\n                });\n            });        \n        };\n    },\n    save(performanceSettings) {\n        return (dispatch) => {\n            dispatch({\n                type: ActionTypes.SAVE_PERFORMANCE_SETTINGS               \n            });        \n            \n            performanceTabService.save(performanceSettings).then(response => {\n                dispatch({\n                    type: ActionTypes.SAVED_PERFORMANCE_SETTINGS,\n                    payload: {\n                        success: response.success\n                    }\n                });  \n            }).catch(() => {\n                dispatch({\n                    type: ActionTypes.ERROR_SAVING_PERFORMANCE_SETTINGS,\n                    payload: {\n                        errorMessage: localization.get(\"errorMessageSavingPerformanceSettingsTab\")\n                    }\n                });\n            });        \n        };\n    }\n};\n\nexport default performanceTabActions;","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { GridSystem, GridCell, InputGroup, Button, Label } from \"@dnnsoftware/dnn-react-common\";\nimport RadioButtonBlock from \"../common/RadioButtonBlock\";\nimport DropdownBlock from \"../common/DropdownBlock\";\nimport InfoBlock from \"../common/InfoBlock\";\nimport SwitchBlock from \"../common/SwitchBlock\";\nimport WarningBlock from \"../common/WarningBlock\";\nimport localization from \"../../localization\";\nimport PerformanceTabActions from \"../../actions/performanceTab\";\nimport utils from \"../../utils\";\n\n\nclass Performance extends Component {\n    UNSAFE_componentWillMount() {\n        this.props.onRetrievePerformanceSettings();\n    }\n\n    UNSAFE_componentWillReceiveProps(newProps) {\n        if (this.props.infoMessage !== newProps.infoMessage && newProps.infoMessage) {\n            utils.notify(newProps.infoMessage);\n        }\n\n        if (this.props.errorMessage !== newProps.errorMessage && newProps.errorMessage) {\n            utils.notifyError(newProps.errorMessage);\n        }\n    }\n\n    getClientResourcesManagementModeOptions() {\n        return [\n            {\n                label: localization.get(\"PerformanceTab_GlobalClientResourcesManagementMode\"),\n                value: \"h\"\n            },\n            {\n                label: this.props.performanceSettings.portalName,\n                value: \"p\"\n            }\n        ];\n    }\n\n    onSave() {\n        const {props} = this;\n\n        props.onSave(props.performanceSettings);\n    }\n\n    confirmHandler() {\n        const {props} = this;\n        const isGlobalSettings = props.performanceSettings.clientResourcesManagementMode === \"h\";\n        if (isGlobalSettings) {\n            props.onIncrementVersion(props.performanceSettings.currentHostVersion, isGlobalSettings);\n        } else {\n            props.onIncrementVersion(props.performanceSettings.currentPortalVersion, isGlobalSettings);\n        }\n    }\n\n    cancelHandler() {\n\n    }\n\n    onIncrementVersion() {\n        utils.confirm(localization.get(\"PerformanceTab_PortalVersionConfirmMessage\"),\n            localization.get(\"PerformanceTab_PortalVersionConfirmYes\"),\n            localization.get(\"PerformanceTab_PortalVersionConfirmNo\"),\n            this.confirmHandler.bind(this), this.cancelHandler.bind(this));\n    }\n\n    onChangeField(key, event) {\n        let value = event;\n        if (event && event.value) {\n            value = event.value;\n        } else if (event && event.target && event.target.value) {\n            value = event.target.value;\n        }\n\n        this.props.onChangePerformanceSettingsValue(key, value);\n    }\n\n    render() {\n        const {props} = this;\n        if (props.isLoading) {\n            return null;\n        }\n\n        const areGlobalSettings = props.performanceSettings.clientResourcesManagementMode === \"h\";\n        let enableCompositeFiles;\n        let minifyCss;\n        let minifyJs;\n        let enableCompositeFilesKey;\n        let minifyCssKey;\n        let minifyJsKey;\n        let version;\n        let versionLocalizationKey;\n        if (areGlobalSettings) {\n            enableCompositeFiles = props.performanceSettings.hostEnableCompositeFiles;\n            minifyCss = props.performanceSettings.hostMinifyCss;\n            minifyJs = props.performanceSettings.hostMinifyJs;\n            enableCompositeFilesKey = \"hostEnableCompositeFiles\";\n            minifyCssKey = \"hostMinifyCss\";\n            minifyJsKey = \"hostMinifyJs\";\n            version = props.performanceSettings.currentHostVersion;\n            versionLocalizationKey = \"PerformanceTab_CurrentHostVersion\";\n        } else {\n            enableCompositeFiles = props.performanceSettings.portalEnableCompositeFiles;\n            minifyCss = props.performanceSettings.portalMinifyCss;\n            minifyJs = props.performanceSettings.portalMinifyJs;\n            enableCompositeFilesKey = \"portalEnableCompositeFiles\";\n            minifyCssKey = \"portalMinifyCss\";\n            minifyJsKey = \"portalMinifyJs\";\n            version = props.performanceSettings.currentPortalVersion;\n            versionLocalizationKey = \"PerformanceTab_CurrentPortalVersion\";\n        }\n\n        return <div className=\"dnn-servers-info-panel-big performanceSettingTab\">\n            <WarningBlock label={localization.get(\"PerformanceTab_AjaxWarning\")} />\n            <GridSystem>\n                <div className=\"leftPane\">\n                    <div className=\"tooltipAdjustment\">\n                        {props.performanceSettings.pageStatePersistenceOptions &&\n                            <RadioButtonBlock options={props.performanceSettings.pageStatePersistenceOptions}\n                                label={localization.get(\"PerformanceTab_PageStatePersistenceMode\")}\n                                tooltip={localization.get(\"PerformanceTab_PageStatePersistenceMode.Help\")}\n                                onChange={this.onChangeField.bind(this, \"pageStatePersistence\")}\n                                value={props.performanceSettings.pageStatePersistence} />\n                        }\n                        {props.performanceSettings.cacheSettingOptions &&\n                            <DropdownBlock\n                                tooltip={localization.get(\"PerformanceTab_CachingProvider.Help\")}\n                                label={localization.get(\"PerformanceTab_CachingProvider\")}\n                                options={props.performanceSettings.cachingProviderOptions}\n                                value={props.performanceSettings.cachingProvider}\n                                onSelect={this.onChangeField.bind(this, \"cachingProvider\")} />\n                        }\n                        {props.performanceSettings.moduleCacheProviders &&\n                            <DropdownBlock\n                                tooltip={localization.get(\"PerformanceTab_ModuleCacheProviders.Help\")}\n                                label={localization.get(\"PerformanceTab_ModuleCacheProviders\")}\n                                options={props.performanceSettings.moduleCacheProviders}\n                                value={props.performanceSettings.moduleCacheProvider}\n                                onSelect={this.onChangeField.bind(this, \"moduleCacheProvider\")} />\n                        }\n                        {props.performanceSettings.pageCacheProviders &&\n                            <DropdownBlock\n                                tooltip={localization.get(\"PerformanceTab_PageCacheProviders.Help\")}\n                                label={localization.get(\"PerformanceTab_PageCacheProviders\")}\n                                options={props.performanceSettings.pageCacheProviders}\n                                value={props.performanceSettings.pageCacheProvider}\n                                onSelect={this.onChangeField.bind(this, \"pageCacheProvider\")} />\n                        }\n                    </div>\n                </div>\n                <div className=\"rightPane\">\n                    {props.performanceSettings.cacheSettingOptions &&\n                        <DropdownBlock\n                            tooltip={localization.get(\"PerformanceTab_CacheSetting.Help\")}\n                            label={localization.get(\"PerformanceTab_CacheSetting\")}\n                            options={props.performanceSettings.cacheSettingOptions}\n                            value={props.performanceSettings.cacheSetting}\n                            onSelect={this.onChangeField.bind(this, \"cacheSetting\")} />\n                    }\n                    {props.performanceSettings.authCacheabilityOptions &&\n                        <DropdownBlock\n                            tooltip={localization.get(\"PerformanceTab_AuthCacheability.Help\")}\n                            label={localization.get(\"PerformanceTab_AuthCacheability\")}\n                            options={props.performanceSettings.authCacheabilityOptions}\n                            value={props.performanceSettings.authCacheability}\n                            onSelect={this.onChangeField.bind(this, \"authCacheability\")} />\n                    }\n                    {props.performanceSettings.unauthCacheabilityOptions &&\n                        <DropdownBlock\n                            tooltip={localization.get(\"PerformanceTab_UnauthCacheability.Help\")}\n                            label={localization.get(\"PerformanceTab_UnauthCacheability\")}\n                            options={props.performanceSettings.unauthCacheabilityOptions}\n                            value={props.performanceSettings.unauthCacheability}\n                            onSelect={this.onChangeField.bind(this, \"unauthCacheability\")} />\n                    }\n                    <SwitchBlock label={localization.get(\"PerformanceTab_SslForCacheSyncrhonization\")}\n                        onText={localization.get(\"SwitchOn\")}\n                        offText={localization.get(\"SwitchOff\")}\n                        tooltip={localization.get(\"PerformanceTab_SslForCacheSyncrhonization.Help\")}\n                        value={props.performanceSettings.sslForCacheSynchronization}\n                        onChange={this.onChangeField.bind(this, \"sslForCacheSynchronization\")} />\n                </div>\n            </GridSystem>\n            <GridCell className=\"dnn-servers-grid-panel newSection\" style={{ paddingLeft: 0 }}>\n                <Label className=\"header-title\" label={localization.get(\"PerformanceTab_ClientResourceManagementTitle\")} />\n            </GridCell>\n            <WarningBlock label={localization.get(\"PerformanceTab_MinifactionWarning\")} />\n            <GridSystem>\n                <div className=\"leftPane\">\n                    <InputGroup>\n                        <Label className=\"title lowerCase\"\n                            label={localization.get(\"PerformanceTab_ClientResourceManagementInfo\")}\n                            style={{ width: \"auto\" }} />\n                    </InputGroup>\n                    <div className=\"currentHostVersion\">\n                        <InfoBlock label={localization.get(versionLocalizationKey)}\n                            text={version} />\n                    </div>\n                    <Button type=\"secondary\" style={{ marginBottom: \"40px\" }} disable={props.incrementingVersion}\n                        onClick={this.onIncrementVersion.bind(this)}>{localization.get(\"PerformanceTab_IncrementVersion\")}</Button>\n                </div>\n                <div className=\"rightPane borderSeparation\">\n                    <RadioButtonBlock options={this.getClientResourcesManagementModeOptions()}\n                        label={localization.get(\"PerformanceTab_ClientResourcesManagementMode\")}\n                        tooltip={localization.get(\"PerformanceTab_ClientResourcesManagementMode.Help\")}\n                        onChange={this.onChangeField.bind(this, \"clientResourcesManagementMode\")}\n                        value={props.performanceSettings.clientResourcesManagementMode} />\n                    <SwitchBlock label={localization.get(\"PerformanceTab_EnableCompositeFiles\")}\n                        onText={localization.get(\"SwitchOn\")}\n                        offText={localization.get(\"SwitchOff\")}\n                        tooltip={localization.get(\"PerformanceTab_EnableCompositeFiles.Help\")}\n                        value={enableCompositeFiles}\n                        onChange={this.onChangeField.bind(this, enableCompositeFilesKey)}\n                        isGlobal={areGlobalSettings} \n                        globalTooltipStyle={{margin: \"8px 0px 0px 5px\"}}/>\n                    <SwitchBlock label={localization.get(\"PerformanceTab_MinifyCss\")}\n                        onText={localization.get(\"SwitchOn\")}\n                        offText={localization.get(\"SwitchOff\")}\n                        tooltip={localization.get(\"PerformanceTab_MinifyCss.Help\")}\n                        value={enableCompositeFiles ? minifyCss : false}\n                        readOnly={!enableCompositeFiles}\n                        onChange={this.onChangeField.bind(this, minifyCssKey)}\n                        isGlobal={areGlobalSettings} \n                        globalTooltipStyle={{margin: \"8px 0px 0px 5px\"}}/>\n                    <SwitchBlock label={localization.get(\"PerformanceTab_MinifyJs\")}\n                        onText={localization.get(\"SwitchOn\")}\n                        offText={localization.get(\"SwitchOff\")}\n                        tooltip={localization.get(\"PerformanceTab_MinifyJs.Help\")}\n                        value={enableCompositeFiles ? minifyJs : false}\n                        readOnly={!enableCompositeFiles}\n                        onChange={this.onChangeField.bind(this, minifyJsKey)}\n                        isGlobal={areGlobalSettings} \n                        globalTooltipStyle={{margin: \"8px 0px 0px 5px\"}}/>\n                </div>\n            </GridSystem>\n            <div className=\"clear\" />\n            <div className=\"buttons-panel\">\n                <Button type=\"primary\" disabled={props.isSaving}\n                    onClick={this.onSave.bind(this)}>{localization.get(\"SaveButtonText\")}</Button>\n            </div>\n        </div>;\n    }\n}\n\nPerformance.propTypes = {\n    performanceSettings: PropTypes.object.isRequired,\n    loading: PropTypes.bool,\n    isSaving: PropTypes.bool,\n    incrementingVersion: PropTypes.bool,\n    errorMessage: PropTypes.string,\n    onRetrievePerformanceSettings: PropTypes.func.isRequired,\n    onChangePerformanceSettingsValue: PropTypes.func.isRequired,\n    onSave: PropTypes.func.isRequired,\n    onIncrementVersion: PropTypes.func.isRequired,\n    infoMessage: PropTypes.string\n};\n\nfunction mapStateToProps(state) {\n    return {\n        performanceSettings: state.performanceTab.performanceSettings,\n        loading: state.performanceTab.saving,\n        isSaving: state.performanceTab.saving,\n        incrementingVersion: state.performanceTab.incrementingVersion,\n        errorMessage: state.logsTab.errorMessage,\n        infoMessage: state.performanceTab.infoMessage\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        ...bindActionCreators({\n            onRetrievePerformanceSettings: PerformanceTabActions.loadPerformanceSettings,\n            onChangePerformanceSettingsValue: PerformanceTabActions.changePerformanceSettingsValue,\n            onSave: PerformanceTabActions.save,\n            onIncrementVersion: PerformanceTabActions.incrementVersion\n        }, dispatch)\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Performance);","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport { GridCell, Dropdown } from \"@dnnsoftware/dnn-react-common\";\nimport Localization from \"../../localization\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport LogsTabActions from \"../../actions/logsTab\";\nimport utils from \"../../utils\";\n\nimport \"./tabs.less\";\n\nclass Logs extends Component {\n    componentDidMount() {\n        if (this.props.logs.length > 0) {\n            return;\n        }\n        this.props.onRetrieveLogsServerInfo();\n    }\n\n    UNSAFE_componentWillReceiveProps(newProps) {\n        if (this.props.errorMessage !== newProps.errorMessage && newProps.errorMessage) {\n            utils.notifyError(newProps.errorMessage);\n        }\n    }\n\n    render() {\n        const { props } = this;\n\n        return <div className=\"dnn-servers-info-panel-big logsTab\">\n            <GridCell columnSize={60} className=\"log-file-cell\">\n                {props.logs.length > 0 &&\n                    <Dropdown\n                        withBorder={false}\n                        label={Localization.get(\"Logs_LogFilesDefaultOption\")}\n                        options={props.logs}\n                        value={props.selectedLog}\n                        prependWith={Localization.get(\"Logs_LogFiles\")}\n                        onSelect={this.props.onSelectedLog}\n                    />}\n            </GridCell>\n            <div className=\"clear\" />\n            <div>\n                <Scrollbars\n                    renderTrackHorizontal={props => <div {...props} className=\"track-horizontal\"/>}\n                    style={{ height: 500 }} >\n                    <div className=\"log-file-display\">{props.logData}</div>\n                </Scrollbars>\n            </div>\n        </div>;\n    }\n}\n\nLogs.propTypes = {\n    logs: PropTypes.arrayOf(PropTypes.object),\n    errorMessage: PropTypes.string,\n    selectedLog: PropTypes.string,\n    onRetrieveLogsServerInfo: PropTypes.func.isRequired,\n    onSelectedLog: PropTypes.func,\n    logData: PropTypes.func\n};\n\nfunction mapStateToProps(state) {\n    return {\n        logs: state.logsTab.logs,\n        errorMessage: state.logsTab.errorMessage,\n        selectedLog: state.logsTab.selectedLog,\n        logData: state.logsTab.logData\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        ...bindActionCreators({\n            onRetrieveLogsServerInfo: LogsTabActions.loadLogsServerInfo,\n            onSelectedLog: LogsTabActions.loadSelectedLog\n        }, dispatch)\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Logs);","import React, {Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { DnnTabs as Tabs, PersonaBarPageBody } from \"@dnnsoftware/dnn-react-common\";\nimport {\n    pagination as PaginationActions\n} from \"../../actions\";\nimport \"./style.less\";\nimport Localization from \"../../localization\";\nimport ApplicationTab from \"../Tabs/Application\";\nimport WebTab from \"../Tabs/Web\";\nimport DatabaseTab from \"../Tabs/Database/Database\";\nimport SmtpServerTab from \"../Tabs/SmtpServer\";\nimport PerformanceTab from \"../Tabs/Performance\";\nimport LogsTab from \"../Tabs/Logs\";\nimport application from \"../../globals/application\";\nimport utils from \"../../utils\";\n\nclass Body extends Component {\n    constructor() {\n        super();\n        this.handleSelect = this.handleSelect.bind(this);        \n    }   \n\n    handleSelect(index) {\n        const {props} = this;\n        props.dispatch(PaginationActions.loadTab(index));\n    }\n\n    insertElementsInArray(array, elements, propertyNameHasIndex, propertyNameHasValue) {\n        for (let i = 0; i < elements.length; i++) {\n            let index = this.getInteger(elements[i][propertyNameHasIndex]);\n            \n            if (index || index === 0) {\n                index = Math.min(array.length, Math.max(0, index));\n                array.splice(index, 0, elements[i][propertyNameHasValue]);\n            }            \n        }\n    }\n\n    getInteger(value) {\n        if (value === 0) {\n            return 0;\n        }\n        if (value) {\n            return parseInt(value.toString());\n        }\n        return value;\n    }  \n   \n    render() {\n        const {props} = this;       \n        const isHost = utils.isHostUser();\n        let registeredTabs = application.getRegisteredServerTabs();\n        if (!isHost) {\n            registeredTabs = registeredTabs.filter(function (tab) {\n                return !tab.isHostOnlyVisible;\n            });\n        }        \n\n        const systemInfoTabHeaders = isHost ? [Localization.get(\"tabApplicationTitle\"), Localization.get(\"tabWebTitle\"), Localization.get(\"tabDatabaseTitle\")] \n            : [Localization.get(\"tabApplicationTitle\")];\n        const systemInfoTabBody = isHost ? [<ApplicationTab key=\"first\" />, <WebTab key=\"second\" />, <DatabaseTab key=\"third\" />]\n            :  [<ApplicationTab key=\"first\" />]; \n        const serverSettingsTabHeaders = isHost ? [Localization.get(\"tabSmtpServerTitle\"), Localization.get(\"tabPerformanceTitle\"), Localization.get(\"tabLogsTitle\")]\n            : [Localization.get(\"tabSmtpServerTitle\")];\n        const serverSettingsTabBody = isHost ? [<SmtpServerTab key=\"first\" />, <PerformanceTab key=\"second\" />, <LogsTab key=\"third\" />]\n            : [<SmtpServerTab key=\"first\" />];\n        const mainTabHeaders = [Localization.get(\"tabSystemInfoTitle\"), Localization.get(\"tabServerSettingsTitle\")];\n        const mainTabBody = [\n            <Tabs tabHeaders={systemInfoTabHeaders}\n                type=\"secondary\" \n                key=\"first\">\n                {systemInfoTabBody}\n            </Tabs>,\n            <Tabs tabHeaders={serverSettingsTabHeaders}\n                type=\"secondary\"\n                key=\"second\">\n                {serverSettingsTabBody}\n            </Tabs>];\n        \n        this.insertElementsInArray(mainTabHeaders, registeredTabs.filter(\n            function (tab) {\n                return !tab.parentIndex && tab.parentIndex !== 0;\n            }), \"order\", \"title\");\n        this.insertElementsInArray(mainTabBody, registeredTabs.filter(\n            function (tab) {\n                return !tab.parentIndex && tab.parentIndex !== 0;\n            }), \"order\", \"component\");\n\n        this.insertElementsInArray(systemInfoTabHeaders, registeredTabs.filter(\n            function (tab) {\n                return tab.parentIndex === 0;\n            }), \"order\", \"title\");\n        this.insertElementsInArray(systemInfoTabBody, registeredTabs.filter(\n            function (tab) {\n                return tab.parentIndex === 0;\n            }), \"order\", \"component\");\n\n        this.insertElementsInArray(serverSettingsTabHeaders, registeredTabs.filter(\n            function (tab) {\n                return tab.parentIndex === 1;\n            }), \"order\", \"title\");\n        this.insertElementsInArray(serverSettingsTabBody, registeredTabs.filter(\n            function (tab) {\n                return tab.parentIndex === 1;\n            }), \"order\", \"component\");\n\n        return (\n            <PersonaBarPageBody>\n                <Tabs className=\"dnn-servers-tab-panel\" \n                    onSelect={this.handleSelect}\n                    selectedIndex={props.tabIndex}\n                    tabHeaders={mainTabHeaders}>\n                    {mainTabBody}                   \n                </Tabs>\n                \n            </PersonaBarPageBody>\n        );\n    }\n}\n\nBody.propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    tabIndex: PropTypes.number   \n};\n\nfunction mapStateToProps(state) {\n    return {\n        tabIndex: state.pagination.tabIndex\n    };\n}\n\nexport default connect(mapStateToProps)(Body);","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Button, PersonaBarPageHeader, PersonaBarPage } from \"@dnnsoftware/dnn-react-common\";\nimport Body from \"./Body/Body\";\nimport localization from \"../localization\";\nimport { bindActionCreators } from \"redux\";\nimport ServerActions from \"../actions/server\";\nimport utils from \"../utils\";\n\nconst restartAppButtonStyle = {\n    \"marginRight\": \"10px\"\n};\n\nclass App extends Component { \n\n    UNSAFE_componentWillReceiveProps(newProps) {       \n        if (this.props.infoMessage !== newProps.infoMessage && newProps.infoMessage) {\n            utils.notify(newProps.infoMessage);\n        }\n\n        if (newProps.reloadPage) {\n            location.reload();\n            return;\n        }\n        if (this.props.errorMessage !== newProps.errorMessage && newProps.errorMessage) {\n            utils.notifyError(newProps.errorMessage);\n        }\n    }\n\n    render() {\n        const {props} = this;\n        const buttonVisible = utils.isHostUser();\n        return (\n            <div className=\"servers-app personaBar-mainContainer\">\n                <PersonaBarPage isOpen={true}>\n                    <PersonaBarPageHeader title=\"Servers\">\n                        {buttonVisible && \n                            <Button type=\"secondary\" size=\"large\" \n                                onClick={props.onClearCacheClicked}>{localization.get(\"clearCacheButtonLabel\")}</Button>\n                        }\n                        {buttonVisible && \n                            <Button type=\"secondary\" size=\"large\" \n                                onClick={props.onRestartApplicationClicked} \n                                style={restartAppButtonStyle}>{localization.get(\"restartApplicationButtonLabel\")}</Button>\n                        }                        \n                    </PersonaBarPageHeader>\n                    <Body />\n                </PersonaBarPage>                \n            </div>\n        );\n    }\n}\n\nApp.propTypes = {\n    dispatch: PropTypes.func,\n    selectedPage: PropTypes.number,\n    selectedPageVisibleIndex: PropTypes.number,\n    onRestartApplicationClicked: PropTypes.func.isRequired,\n    reloadPage: PropTypes.bool.isRequired,\n    errorMessage: PropTypes.string,\n    infoMessage: PropTypes.string\n};\n\nfunction mapStateToProps(state) {\n    return {\n        selectedPage: state.visiblePanel.selectedPage,\n        selectedPageVisibleIndex: state.visiblePanel.selectedPageVisibleIndex,\n        reloadPage: state.server.reloadPage,\n        errorMessage: state.server.errorMessage,\n        infoMessage: state.server.infoMessage\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        ...bindActionCreators ({\n            onRestartApplicationClicked: ServerActions.restartApplication,\n            onClearCacheClicked: ServerActions.clearCache\n        }, dispatch)\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import React, {Component} from \"react\";\nimport App from \"../components/App\";\n\nclass Root extends Component {\n    constructor() {\n        super();\n    }\n    render() {\n        return (\n            <div className=\"servers-root\">\n                <App/>\n            </div>\n        );\n    }\n}\n\nexport default Root;","import Localization from \"../localization\";\n\nconst regExpPositiveIntegerValue = /^(0|[1-9]\\d*)$/;\n\nexport default function validateFields(field, value) {\n    const errors = {};\n\n    if (field === \"smtpConnectionLimit\" || field === \"smtpMaxIdleTime\" || field === \"messageSchedulerBatchSize\" ) {\n        if (!regExpPositiveIntegerValue.test(value)) {\n            errors[field] = Localization.get(\"NoIntegerValueError\");\n        }\n        else {\n            errors[field] = undefined;\n        }\n    }\n\n    return errors;\n}","import { combineReducers } from \"redux\";\nimport pagination from \"./paginationReducer\";\nimport visiblePanel from \"./visiblePanelReducer\";\nimport webTab from \"./webTabReducer\";\nimport server from \"./serverReducer\";\nimport applicationTab from \"./applicationTabReducer\";\nimport databaseTab from \"./databaseTabReducer\";\nimport smtpServer from \"./smtpServerTabReducer\";\nimport logsTab from \"./logsTabReducer\";\nimport performanceTab from \"./performanceTabReducer\";\n\nconst rootReducer = combineReducers({\n    pagination,\n    visiblePanel,\n    webTab,\n    server,\n    applicationTab,\n    databaseTab,\n    smtpServer,\n    logsTab,\n    performanceTab\n});\n\nexport default rootReducer;\n","import {pagination as ActionTypes}  from \"../constants/actionTypes\";\nexport default function pagination(state = {\n    tabIndex: 0\n}, action) {\n    switch (action.type) {\n        case ActionTypes.LOAD_TAB_DATA:\n            return { ...state,\n                tabIndex: action.payload.index\n            };\n        default:\n            return state;      \n    }\n}\n","import {visiblePanel as ActionTypes}  from \"../constants/actionTypes\";\nexport default function visiblePanel(state = {\n    selectedPage: 0\n}, action) {\n    switch (action.type) {\n        case ActionTypes.SELECT_PANEL:\n            return { ...state,\n                selectedPage: action.payload.selectedPage\n            };     \n        default:\n            return state;  \n    }\n}\n","import {webTab as ActionTypes}  from \"../constants/actionTypes\";\n\nexport default function webTabReducer(state = {\n    webServerInfo: {},\n    errorMessage: \"\"\n}, action) {\n    switch (action.type) {\n        case ActionTypes.LOAD_WEB_TAB:\n            return { ...state,\n                webServerInfo: {},\n                errorMessage: \"\"\n            };\n        case ActionTypes.LOADED_WEB_TAB:\n            return { ...state,\n                webServerInfo: action.payload.webServerInfo,\n                errorMessage: \"\"\n            };\n        case ActionTypes.ERROR_LOADING_WEB_TAB:\n            return { ...state,\n                webServerInfo: {},\n                errorMessage:  action.payload.errorMessage\n            };  \n        default:\n            return state;      \n    }\n}","import {server as ActionTypes}  from \"../constants/actionTypes\";\nimport localization from \"../localization\";\n\nexport default function webTabReducer(state = {\n    reloadPage: false,\n    infoMessage: \"\",\n    errorMessage: \"\"\n}, action) {\n    switch (action.type) {\n        case ActionTypes.REQUEST_RESTART_APPLICATION:\n            return { ...state,\n                reloadPage: false,\n                infoMessage: \"\",\n                errorMessage: \"\"\n            };\n        case ActionTypes.END_REQUEST_RESTART_APPLICATION:\n            return { ...state,\n                reloadPage: true,\n                infoMessage: localization.get(\"infoMessageRestartingApplication\"),\n                errorMessage: \"\"\n            };\n        case ActionTypes.ERROR_REQUEST_RESTART_APPLICATION:\n            return { ...state,\n                reloadPage: false,\n                infoMessage: \"\",\n                errorMessage:  action.payload.errorMessage\n            };\n        case ActionTypes.REQUEST_CLEAR_CACHE:\n            return { ...state,\n                reloadPage: false,\n                infoMessage: \"\",\n                errorMessage: \"\"\n            };\n        case ActionTypes.END_REQUEST_CLEAR_CACHE:\n            return { ...state,\n                reloadPage: true,\n                infoMessage: localization.get(\"infoMessageClearingCache\"),\n                errorMessage: \"\"\n            };\n        case ActionTypes.ERROR_REQUEST_CLEAR_CACHE:\n            return { ...state,\n                reloadPage: false,\n                infoMessage: \"\",\n                errorMessage:  action.payload.errorMessage\n            };\n\n        default:\n            return state;\n    }\n}\n","import {applicationTab as ActionTypes}  from \"../constants/actionTypes\";\n\nexport default function webTabReducer(state = {\n    applicationInfo: {},\n    isApplicationInfoLoaded: false,\n    errorMessage: \"\"\n}, action) {\n    switch (action.type) {\n        case ActionTypes.LOAD_APPLICATION_TAB:\n            return { ...state,\n                applicationInfo: {},\n                isApplicationInfoLoaded: false,\n                errorMessage: \"\"\n            };\n        case ActionTypes.LOADED_APPLICATION_TAB:\n            return { ...state,\n                applicationInfo: action.payload.applicationInfo,\n                isApplicationInfoLoaded: true,\n                errorMessage: \"\"\n            };\n        case ActionTypes.ERROR_LOADING_APPLICATION_TAB:\n            return { ...state,\n                applicationInfo: {},\n                isApplicationInfoLoaded: false,\n                errorMessage:  action.payload.errorMessage\n            };\n        default:\n            return state;\n    }\n}","import {databaseTab as ActionTypes}  from \"../constants/actionTypes\";\n\nexport default function webTabReducer(state = {\n    databaseServerInfo: {},\n    errorMessage: \"\"\n}, action) {\n    switch (action.type) {\n        case ActionTypes.LOAD_DATABASE_TAB:\n            return { ...state,\n                databaseServerInfo: {},\n                errorMessage: \"\"\n            };\n        case ActionTypes.LOADED_DATABASE_TAB:\n            return { ...state,\n                databaseServerInfo: action.payload.databaseServerInfo,\n                errorMessage: \"\"\n            };\n        case ActionTypes.ERROR_LOADING_DATABASE_TAB:\n            return { ...state,\n                databaseServerInfo: {},\n                errorMessage:  action.payload.errorMessage\n            }; \n        default:\n            return state;     \n    }\n}","import { smtpServerTab as ActionTypes } from \"../constants/actionTypes\";\nimport validateFields from \"../validation/validationSmtpServerTab\";\nimport utils from \"../utils\";\nimport localization from \"../localization\";\n\nexport default function smtpServerTabReducer(state = {\n    smtpServerInfo: {},\n    errorMessage: \"\",\n    infoMessage: \"\",\n    errors: {}\n}, action) { \n    switch (action.type) {\n        case ActionTypes.LOAD_SMTP_SERVER_TAB:\n            return { ...state,\n                smtpServerInfo: {},\n                errorMessage: \"\"\n            };\n        case ActionTypes.LOADED_SMTP_SERVER_TAB:\n            return { ...state,\n                smtpServerInfo: action.payload.smtpServerInfo,\n                errorMessage: \"\",\n                errors: {}\n            };\n        case ActionTypes.ERROR_LOADING_SMTP_SERVER_TAB:\n            return { ...state,\n                smtpServerInfo: {},\n                errorMessage: action.payload.errorMessage\n            };\n        case ActionTypes.CHANGE_SMTP_SERVER_MODE: {\n            let errors = {};\n            if (action.payload.smtpServeMode === \"h\") {             \n                if (utils.isHostUser()) {\n                    const smtpSettings = state.smtpServerInfo.host;\n                    errors = {                        \n                        ...validateFields(\"smtpConnectionLimit\", smtpSettings.smtpConnectionLimit),\n                        ...validateFields(\"smtpMaxIdleTime\", smtpSettings.smtpMaxIdleTime),\n                        ...validateFields(\"messageSchedulerBatchSize\", smtpSettings.messageSchedulerBatchSize)\n                    };\n                }\n            } else {\n                const smtpSettings = state.smtpServerInfo.site;\n                errors = {                        \n                    ...validateFields(\"smtpConnectionLimit\", smtpSettings.smtpConnectionLimit),\n                    ...validateFields(\"smtpMaxIdleTime\", smtpSettings.smtpMaxIdleTime)\n                };\n            }\n\n            return { ...state,\n                smtpServerInfo: {\n                    ...state.smtpServerInfo,\n                    smtpServerMode: action.payload.smtpServeMode\n                }, \n                errors\n            };\n        }\n        case ActionTypes.CHANGE_SMTP_AUTHENTICATION: {\n            if (state.smtpServerInfo.smtpServerMode === \"h\") {\n                return { ...state,\n                    smtpServerInfo: {...state.smtpServerInfo,\n                        host: {...state.smtpServerInfo.host,\n                            smtpAuthentication: action.payload.smtpAuthentication\n                        }\n                    }\n                };\n            }\n\n            return { ...state,\n                smtpServerInfo: {...state.smtpServerInfo,\n                    site: {...state.smtpServerInfo.site,\n                        smtpAuthentication: action.payload.smtpAuthentication\n                    }\n                }\n            };\n        }\n        case ActionTypes.CHANGE_SMTP_CONFIGURATION_VALUE: {\n            const field = action.payload.field;\n            const value = action.payload.value;\n            const smtpServerInfo = {\n                ...state.smtpServerInfo\n            };\n            if (field === \"messageSchedulerBatchSize\") {\n                smtpServerInfo.host = {...state.smtpServerInfo.host };\n                smtpServerInfo.host[field] = value;\n            } else {\n                if (state.smtpServerInfo.smtpServerMode === \"h\") {\n                    smtpServerInfo.host = {...state.smtpServerInfo.host };\n                    smtpServerInfo.host[field] = value;\n                } else {\n                    smtpServerInfo.site = {...state.smtpServerInfo.site };\n                    smtpServerInfo.site[field] = value;\n                }\n            }\n\n            return { ...state, smtpServerInfo,\n                errors: {\n                    ...(state.errors),\n                    ...validateFields(field, value)\n                }\n            };\n        }\n        case ActionTypes.UPDATE_SMTP_SERVER_SETTINGS:\n            return { ...state,\n                errorMessage:  \"\",\n                infoMessage: \"\"\n            };\n        case ActionTypes.UPDATED_SMTP_SERVER_SETTINGS: \n            return { ...state,\n                errorMessage: \"\",\n                infoMessage: localization.get(\"SaveConfirmationMessage\")\n            };\n        case ActionTypes.ERROR_UPDATING_SMTP_SERVER_SETTINGS:\n            return { ...state,\n                errorMessage: action.payload.errorMessage,\n                infoMessage: \"\"\n            };\n\n        case ActionTypes.SEND_TEST_EMAIL:\n            return { ...state,\n                errorMessage:  \"\",\n                infoMessage: \"\"\n            };\n        case ActionTypes.SENT_TEST_EMAIL: \n            return { ...state,\n                errorMessage: action.payload.success ? \"\" : action.payload.errorMessage,\n                infoMessage: action.payload.success ? action.payload.infoMessage : \"\"\n            };\n        case ActionTypes.ERROR_SENDING_TEST_EMAIL:\n            return { ...state,\n                errorMessage: action.payload.errorMessage,\n                infoMessage: \"\"\n            };\n\n        default:\n            return state;\n    }\n}","import {logsTab as ActionTypes}  from \"../constants/actionTypes\";\n\nexport default function webTabReducer(state = {\n    logs: {},\n    selectedLog: \"\",\n    errorMessage: \"\",\n    logData: \"\"\n}, action) {\n    switch (action.type) {\n        case ActionTypes.LOAD_LOGS_TAB:\n            return { ...state,\n                logs: {},\n                selectedLog: \"\",\n                errorMessage: \"\",\n                logData: \"\"\n            };\n        case ActionTypes.LOADED_LOGS_TAB:\n            return { ...state,\n                logs: action.payload.logs,\n                errorMessage: \"\"\n            };\n        case ActionTypes.ERROR_LOADING_LOGS_TAB:\n            return { ...state,\n                logs: {},\n                errorMessage:  action.payload.errorMessage\n            }; \n        \n        case ActionTypes.LOAD_LOG:\n            return { ...state,\n                selectedLog: action.payload.log,\n                errorMessage: \"\"\n            };\n        case ActionTypes.LOADED_LOG:\n            return { ...state,\n                logData: action.payload.log,\n                errorMessage: \"\"\n            };\n        case ActionTypes.ERROR_LOADING_LOG:\n            return { ...state,\n                errorMessage:  action.payload.errorMessage\n            }; \n        default:\n            return state;     \n    }\n}","import {performanceTab as ActionTypes}  from \"../constants/actionTypes\";\nimport localization from \"../localization\";\n\nexport default function webTabReducer(state = {\n    performanceSettings: {},\n    pageStatePersistenceMode: \"\",\n    errorMessage: \"\",\n    loading: false,\n    saving: false,\n    incrementingVersion: false,\n    infoMessage: \"\"\n}, action) {\n    switch (action.type) {\n        case ActionTypes.LOAD_PERFORMANCE_TAB:\n            return { ...state,\n                performanceSettings: {},\n                loading: true,\n                errorMessage: \"\"\n            };\n        case ActionTypes.LOADED_PERFORMANCE_TAB:\n            return { ...state,\n                performanceSettings: action.payload.performanceSettings,\n                loading: false,\n                errorMessage: \"\"\n            };\n        case ActionTypes.ERROR_LOADING_PERFORMANCE_TAB:\n            return { ...state,\n                performanceSettings: {},\n                loading: false,\n                errorMessage:  action.payload.errorMessage\n            }; \n        case ActionTypes.CHANGE_PERFORMANCE_SETTINGS_VALUE: {\n            const field = action.payload.field;\n            const value = action.payload.value;\n            const performanceSettings = {\n                ...state.performanceSettings\n            };\n        \n            performanceSettings[field] = value;\n            return { ...state, performanceSettings};\n        }\n        case ActionTypes.SAVE_PERFORMANCE_SETTINGS:\n            return { ...state,\n                saving: true,\n                errorMessage: \"\",\n                infoMessage: \"\"\n            }; \n        case ActionTypes.SAVED_PERFORMANCE_SETTINGS: \n            return { ...state,\n                saving: false,\n                errorMessage: \"\",\n                infoMessage: localization.get(\"SaveConfirmationMessage\")\n            };\n        case ActionTypes.ERROR_SAVING_PERFORMANCE_SETTINGS:\n            return { ...state,\n                saving: false,\n                errorMessage: action.payload.errorMessage,\n                infoMessage: \"\"\n            };\n        case ActionTypes.INCREMENT_VERSION:\n            return { ...state,\n                incrementingVersion: true,\n                infoMessage: \"\"\n            }; \n        case ActionTypes.INCREMENTED_VERSION: \n            return { ...state,\n                incrementingVersion: false,\n                infoMessage: localization.get(\"VersionIncrementedConfirmation\")\n            };\n        case ActionTypes.ERROR_INCREMENTING_VERSION:\n            return { ...state,\n                incrementingVersion: false,\n                errorMessage: action.payload.errorMessage,\n                infoMessage: \"\"\n            };\n        default:\n            return state;     \n    }\n}","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport application from \"./globals/application\";\nimport configureStore from \"./store/configureStore\";\nimport App from \"./containers/Root\";\n\nlet store = configureStore();\n\napplication.dispatch = store.dispatch;\n\nwindow.dnn.server =  {\n    registerServerTab: application.registerServerTab\n};\n\nconst appContainer = document.getElementById(\"servers-container\");\nconst initCallback = appContainer.getAttribute(\"data-init-callback\");\napplication.init(initCallback);\n\nrender(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    appContainer\n);","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"../reducers/rootReducer\";\n\nexport default function configureStore(initialState) {\n\n    const middleware = process.env.NODE_ENV !== \"production\" ?\n        [require(\"redux-immutable-state-invariant\")(), thunk] :\n        [thunk];\n\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n    const store = createStore(\n        rootReducer,\n        initialState,\n        composeEnhancers(applyMiddleware(...middleware))\n    );\n    return store;\n}\n"],"sourceRoot":""}